{"ast":null,"code":"export var createListener = function createListener(ongoingRequests) {\n  return function (_ref) {\n    var message = _ref.data;\n    var id = message.id;\n\n    if (id !== null) {\n      var ongoingRequest = ongoingRequests.get(id);\n\n      if (ongoingRequest !== undefined) {\n        var reject = ongoingRequest.reject,\n            resolve = ongoingRequest.resolve;\n        ongoingRequests.delete(id);\n\n        if (message.error === undefined) {\n          resolve(message.result);\n        } else {\n          reject(new Error(message.error.message));\n        }\n      }\n    }\n  };\n};","map":{"version":3,"mappings":"AAGA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,eAAD,EAA0E;EACpG,OAAO,gBAAoC;IAAA,IAA3BC,OAA2B,QAAjCC,IAAiC;IACvC,IAAQC,EAAR,GAAeF,OAAf,CAAQE,EAAR;;IAEA,IAAIA,EAAE,KAAK,IAAX,EAAiB;MACb,IAAMC,cAAc,GAAGJ,eAAe,CAACK,GAAhB,CAAoBF,EAApB,CAAvB;;MAEA,IAAIC,cAAc,KAAKE,SAAvB,EAAkC;QAC9B,IAAQC,MAAR,GAA4BH,cAA5B,CAAQG,MAAR;QAAA,IAAgBC,OAAhB,GAA4BJ,cAA5B,CAAgBI,OAAhB;QAEAR,eAAe,CAACS,MAAhB,CAAuBN,EAAvB;;QAEA,IAA0BF,OAAQ,CAACS,KAAT,KAAmBJ,SAA7C,EAAwD;UACpDE,OAAO,CAAwBP,OAAQ,CAACU,MAAjC,CAAP;QACH,CAFD,MAEO;UACHJ,MAAM,CAAC,IAAIK,KAAJ,CAAgCX,OAAQ,CAACS,KAAT,CAAeT,OAA/C,CAAD,CAAN;QACH;MACJ;IACJ;EACJ,CAlBD;AAmBH,CApBM","names":["createListener","ongoingRequests","message","data","id","ongoingRequest","get","undefined","reject","resolve","delete","error","result","Error"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\recorder-audio-worklet\\src\\factories\\listener.ts"],"sourcesContent":["import type { IWorkerEvent } from 'broker-factory';\nimport type { IWorkerErrorMessage, IWorkerResultMessage } from 'worker-factory';\n\nexport const createListener = (ongoingRequests: Map<number, { reject: Function; resolve: Function }>) => {\n    return ({ data: message }: IWorkerEvent) => {\n        const { id } = message;\n\n        if (id !== null) {\n            const ongoingRequest = ongoingRequests.get(id);\n\n            if (ongoingRequest !== undefined) {\n                const { reject, resolve } = ongoingRequest;\n\n                ongoingRequests.delete(id);\n\n                if ((<IWorkerErrorMessage>message).error === undefined) {\n                    resolve((<IWorkerResultMessage>message).result);\n                } else {\n                    reject(new Error((<IWorkerErrorMessage>message).error.message));\n                }\n            }\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}