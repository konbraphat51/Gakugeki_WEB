{"ast":null,"code":"export var createMidiOutputs = function createMidiOutputs(wrapSubscribeFunction) {\n  return function (midiAccess) {\n    return wrapSubscribeFunction(function (observer) {\n      var midiOutputs = Array.from(midiAccess.outputs.values());\n\n      var emitMidiOutputs = function emitMidiOutputs() {\n        var midiAccessOutputs = midiAccess.outputs;\n\n        if (midiOutputs.length !== midiAccessOutputs.size || midiOutputs.some(function (_ref) {\n          var id = _ref.id;\n          return !midiAccessOutputs.has(id);\n        })) {\n          midiOutputs = Array.from(midiAccessOutputs.values());\n          observer.next(midiOutputs);\n        }\n      };\n\n      observer.next(midiOutputs);\n      midiAccess.addEventListener('statechange', emitMidiOutputs);\n      return function () {\n        return midiAccess.removeEventListener('statechange', emitMidiOutputs);\n      };\n    });\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,iBAAiB,GAAwB,SAAzCA,iBAAyC,CAACC,qBAAD,EAA0B;EAC5E,OAAO,UAACC,UAAD;IAAA,OACHD,qBAAqB,CAAC,UAACE,QAAD,EAAa;MAC/B,IAAIC,WAAW,GAAGC,KAAK,CAACC,IAAN,CAAWJ,UAAU,CAACK,OAAX,CAAmBC,MAAnB,EAAX,CAAlB;;MAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAK;QACzB,IAAMC,iBAAiB,GAAGR,UAAU,CAACK,OAArC;;QAEA,IAAIH,WAAW,CAACO,MAAZ,KAAuBD,iBAAiB,CAACE,IAAzC,IAAiDR,WAAW,CAACS,IAAZ,CAAiB;UAAA,IAAGC,EAAH,QAAGA,EAAH;UAAA,OAAY,CAACJ,iBAAiB,CAACK,GAAlB,CAAsBD,EAAtB,CAAb;QAAA,CAAjB,CAArD,EAA+G;UAC3GV,WAAW,GAAGC,KAAK,CAACC,IAAN,CAAWI,iBAAiB,CAACF,MAAlB,EAAX,CAAd;UAEAL,QAAQ,CAACa,IAAT,CAAcZ,WAAd;QACH;MACJ,CARD;;MAUAD,QAAQ,CAACa,IAAT,CAAcZ,WAAd;MACAF,UAAU,CAACe,gBAAX,CAA4B,aAA5B,EAA2CR,eAA3C;MAEA,OAAO;QAAA,OAAMP,UAAU,CAACgB,mBAAX,CAA+B,aAA/B,EAA8CT,eAA9C,CAAN;MAAA,CAAP;IACH,CAjBoB,CADlB;EAAA,CAAP;AAmBH,CApBM","names":["createMidiOutputs","wrapSubscribeFunction","midiAccess","observer","midiOutputs","Array","from","outputs","values","emitMidiOutputs","midiAccessOutputs","length","size","some","id","has","next","addEventListener","removeEventListener"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\subscribable-things\\src\\factories\\midi-outputs.ts"],"sourcesContent":["import { TMidiOutputsFactory } from '../types';\n\nexport const createMidiOutputs: TMidiOutputsFactory = (wrapSubscribeFunction) => {\n    return (midiAccess) =>\n        wrapSubscribeFunction((observer) => {\n            let midiOutputs = Array.from(midiAccess.outputs.values());\n\n            const emitMidiOutputs = () => {\n                const midiAccessOutputs = midiAccess.outputs;\n\n                if (midiOutputs.length !== midiAccessOutputs.size || midiOutputs.some(({ id }) => !midiAccessOutputs.has(id))) {\n                    midiOutputs = Array.from(midiAccessOutputs.values());\n\n                    observer.next(midiOutputs);\n                }\n            };\n\n            observer.next(midiOutputs);\n            midiAccess.addEventListener('statechange', emitMidiOutputs);\n\n            return () => midiAccess.removeEventListener('statechange', emitMidiOutputs);\n        });\n};\n"]},"metadata":{},"sourceType":"module"}