{"ast":null,"code":"import _slicedToArray from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nexport var createAddPassiveInputConnectionToAudioNode = function createAddPassiveInputConnectionToAudioNode(insertElementInSet) {\n  return function (passiveInputs, input, _ref, ignoreDuplicates) {\n    var _ref2 = _slicedToArray(_ref, 3),\n        source = _ref2[0],\n        output = _ref2[1],\n        eventListener = _ref2[2];\n\n    var passiveInputConnections = passiveInputs.get(source);\n\n    if (passiveInputConnections === undefined) {\n      passiveInputs.set(source, new Set([[output, input, eventListener]]));\n    } else {\n      insertElementInSet(passiveInputConnections, [output, input, eventListener], function (passiveInputConnection) {\n        return passiveInputConnection[0] === output && passiveInputConnection[1] === input;\n      }, ignoreDuplicates);\n    }\n  };\n};","map":{"version":3,"mappings":";AAEA,OAAO,IAAMA,0CAA0C,GAAiD,SAA3FA,0CAA2F,CAACC,kBAAD,EAAuB;EAC3H,OAAO,UAACC,aAAD,EAAgBC,KAAhB,QAAwDC,gBAAxD,EAA4E;IAAA;IAAA,IAApDC,MAAoD;IAAA,IAA5CC,MAA4C;IAAA,IAApCC,aAAoC;;IAC/E,IAAMC,uBAAuB,GAAGN,aAAa,CAACO,GAAd,CAAkBJ,MAAlB,CAAhC;;IAEA,IAAIG,uBAAuB,KAAKE,SAAhC,EAA2C;MACvCR,aAAa,CAACS,GAAd,CAAkBN,MAAlB,EAA0B,IAAIO,GAAJ,CAAQ,CAAC,CAACN,MAAD,EAASH,KAAT,EAAgBI,aAAhB,CAAD,CAAR,CAA1B;IACH,CAFD,MAEO;MACHN,kBAAkB,CACdO,uBADc,EAEd,CAACF,MAAD,EAASH,KAAT,EAAgBI,aAAhB,CAFc,EAGd,UAACM,sBAAD;QAAA,OAA4BA,sBAAsB,CAAC,CAAD,CAAtB,KAA8BP,MAA9B,IAAwCO,sBAAsB,CAAC,CAAD,CAAtB,KAA8BV,KAAlG;MAAA,CAHc,EAIdC,gBAJc,CAAlB;IAMH;EACJ,CAbD;AAcH,CAfM","names":["createAddPassiveInputConnectionToAudioNode","insertElementInSet","passiveInputs","input","ignoreDuplicates","source","output","eventListener","passiveInputConnections","get","undefined","set","Set","passiveInputConnection"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\standardized-audio-context\\src\\factories\\add-passive-input-connection-to-audio-node.ts"],"sourcesContent":["import { TAddPassiveInputConnectionToAudioNodeFactory } from '../types';\n\nexport const createAddPassiveInputConnectionToAudioNode: TAddPassiveInputConnectionToAudioNodeFactory = (insertElementInSet) => {\n    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n        const passiveInputConnections = passiveInputs.get(source);\n\n        if (passiveInputConnections === undefined) {\n            passiveInputs.set(source, new Set([[output, input, eventListener]]));\n        } else {\n            insertElementInSet(\n                passiveInputConnections,\n                [output, input, eventListener],\n                (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input,\n                ignoreDuplicates\n            );\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}