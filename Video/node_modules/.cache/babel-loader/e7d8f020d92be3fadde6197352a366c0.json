{"ast":null,"code":"import _objectSpread from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers'\n};\nexport var createMediaStreamAudioDestinationNodeConstructor = function createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(MediaStreamAudioDestinationNode, _audioNodeConstructor);\n\n    var _super = _createSuper(MediaStreamAudioDestinationNode);\n\n    function MediaStreamAudioDestinationNode(context, options) {\n      var _this;\n\n      _classCallCheck(this, MediaStreamAudioDestinationNode);\n\n      var nativeContext = getNativeContext(context); // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw new TypeError();\n      }\n\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n\n      var nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n      _this = _super.call(this, context, false, nativeMediaStreamAudioDestinationNode, null);\n      _this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n      return _this;\n    }\n\n    _createClass(MediaStreamAudioDestinationNode, [{\n      key: \"stream\",\n      get: function get() {\n        return this._nativeMediaStreamAudioDestinationNode.stream;\n      }\n    }]);\n\n    return MediaStreamAudioDestinationNode;\n  }(audioNodeConstructor);\n};","map":{"version":3,"mappings":";;;;;AAGA,IAAMA,eAAe,GAAG;EACpBC,YAAY,EAAE,CADM;EAEpBC,gBAAgB,EAAE,UAFE;EAGpBC,qBAAqB,EAAE;AAHH,CAAxB;AAMA,OAAO,IAAMC,gDAAgD,GAAuD,SAAvGA,gDAAuG,CAChHC,oBADgH,EAEhHC,2CAFgH,EAGhHC,gBAHgH,EAIhHC,2BAJgH,EAKhH;EACA;IAAA;;IAAA;;IAII,yCAAYC,OAAZ,EAAwBC,OAAxB,EAA4D;MAAA;;MAAA;;MACxD,IAAMC,aAAa,GAAGJ,gBAAgB,CAACE,OAAD,CAAtC,CADwD,CAGxD;;MACA,IAAID,2BAA2B,CAACG,aAAD,CAA/B,EAAgD;QAC5C,MAAM,IAAIC,SAAJ,EAAN;MACH;;MAED,IAAMC,aAAa,mCAAQb,eAAR,GAA4BU,OAA5B,CAAnB;;MACA,IAAMI,qCAAqC,GAAGR,2CAA2C,CAACK,aAAD,EAAgBE,aAAhB,CAAzF;MAEA,0BAAMJ,OAAN,EAAe,KAAf,EAAsBK,qCAAtB,EAAoF,IAApF;MAEA,MAAKC,sCAAL,GAA8CD,qCAA9C;MAbwD;IAc3D;;IAlBL;MAAA;MAAA,KAoBI,eAAU;QACN,OAAO,KAAKC,sCAAL,CAA4CC,MAAnD;MACH;IAtBL;;IAAA;EAAA,EAAqGX,oBAArG;AAwBH,CA9BM","names":["DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","createMediaStreamAudioDestinationNodeConstructor","audioNodeConstructor","createNativeMediaStreamAudioDestinationNode","getNativeContext","isNativeOfflineAudioContext","context","options","nativeContext","TypeError","mergedOptions","nativeMediaStreamAudioDestinationNode","_nativeMediaStreamAudioDestinationNode","stream"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\standardized-audio-context\\src\\factories\\media-stream-audio-destination-node-constructor.ts"],"sourcesContent":["import { IAudioContext, IAudioNodeOptions, IMediaStreamAudioDestinationNode, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaStreamAudioDestinationNodeConstructorFactory, TNativeMediaStreamAudioDestinationNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n} as const;\n\nexport const createMediaStreamAudioDestinationNodeConstructor: TMediaStreamAudioDestinationNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaStreamAudioDestinationNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class MediaStreamAudioDestinationNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaStreamAudioDestinationNode<T> {\n        private _nativeMediaStreamAudioDestinationNode: TNativeMediaStreamAudioDestinationNode;\n\n        constructor(context: T, options?: Partial<IAudioNodeOptions>) {\n            const nativeContext = getNativeContext(context);\n\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n\n            super(context, false, nativeMediaStreamAudioDestinationNode, <TAudioNodeRenderer<T>>null);\n\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n\n        get stream(): MediaStream {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}