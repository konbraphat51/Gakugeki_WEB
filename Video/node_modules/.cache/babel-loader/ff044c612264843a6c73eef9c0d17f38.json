{"ast":null,"code":"export var createNativePeriodicWaveFactory = function createNativePeriodicWaveFactory(createIndexSizeError) {\n  return function (nativeContext, _ref) {\n    var disableNormalization = _ref.disableNormalization,\n        imag = _ref.imag,\n        real = _ref.real;\n    // Bug #180: Safari does not allow to use ordinary arrays.\n    var convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n    var convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n    var nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, {\n      disableNormalization: disableNormalization\n    }); // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.\n\n    if (Array.from(imag).length < 2) {\n      throw createIndexSizeError();\n    }\n\n    return nativePeriodicWave;\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,+BAA+B,GAAsC,SAArEA,+BAAqE,CAACC,oBAAD,EAAyB;EACvG,OAAO,UAACC,aAAD,QAAwD;IAAA,IAAtCC,oBAAsC,QAAtCA,oBAAsC;IAAA,IAAhBC,IAAgB,QAAhBA,IAAgB;IAAA,IAAVC,IAAU,QAAVA,IAAU;IAC3D;IACA,IAAMC,aAAa,GAAGF,IAAI,YAAYG,YAAhB,GAA+BH,IAA/B,GAAsC,IAAIG,YAAJ,CAAiBH,IAAjB,CAA5D;IACA,IAAMI,aAAa,GAAGH,IAAI,YAAYE,YAAhB,GAA+BF,IAA/B,GAAsC,IAAIE,YAAJ,CAAiBF,IAAjB,CAA5D;IAEA,IAAMI,kBAAkB,GAAGP,aAAa,CAACQ,kBAAd,CAAiCF,aAAjC,EAAgDF,aAAhD,EAA+D;MAAEH,oBAAoB,EAApBA;IAAF,CAA/D,CAA3B,CAL2D,CAO3D;;IACA,IAAIQ,KAAK,CAACC,IAAN,CAAWR,IAAX,EAAiBS,MAAjB,GAA0B,CAA9B,EAAiC;MAC7B,MAAMZ,oBAAoB,EAA1B;IACH;;IAED,OAAOQ,kBAAP;EACH,CAbD;AAcH,CAfM","names":["createNativePeriodicWaveFactory","createIndexSizeError","nativeContext","disableNormalization","imag","real","convertedImag","Float32Array","convertedReal","nativePeriodicWave","createPeriodicWave","Array","from","length"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\standardized-audio-context\\src\\factories\\native-periodic-wave-factory.ts"],"sourcesContent":["import { TNativePeriodicWaveFactoryFactory } from '../types';\n\nexport const createNativePeriodicWaveFactory: TNativePeriodicWaveFactoryFactory = (createIndexSizeError) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #180: Safari does not allow to use ordinary arrays.\n        const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n        const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n\n        const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });\n\n        // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.\n        if (Array.from(imag).length < 2) {\n            throw createIndexSizeError();\n        }\n\n        return nativePeriodicWave;\n    };\n};\n"]},"metadata":{},"sourceType":"module"}