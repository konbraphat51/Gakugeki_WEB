{"ast":null,"code":"import { createInvalidStateError } from '../factories/invalid-state-error';\nexport var wrapChannelSplitterNode = function wrapChannelSplitterNode(channelSplitterNode) {\n  var channelCount = channelSplitterNode.numberOfOutputs; // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n\n  Object.defineProperty(channelSplitterNode, 'channelCount', {\n    get: function get() {\n      return channelCount;\n    },\n    set: function set(value) {\n      if (value !== channelCount) {\n        throw createInvalidStateError();\n      }\n    }\n  }); // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n\n  Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n    get: function get() {\n      return 'explicit';\n    },\n    set: function set(value) {\n      if (value !== 'explicit') {\n        throw createInvalidStateError();\n      }\n    }\n  }); // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n\n  Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n    get: function get() {\n      return 'discrete';\n    },\n    set: function set(value) {\n      if (value !== 'discrete') {\n        throw createInvalidStateError();\n      }\n    }\n  });\n};","map":{"version":3,"mappings":"AAAA,SAASA,uBAAT,QAAwC,kCAAxC;AAGA,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,mBAAD,EAA0D;EAC7F,IAAMC,YAAY,GAAGD,mBAAmB,CAACE,eAAzC,CAD6F,CAG7F;;EACAC,MAAM,CAACC,cAAP,CAAsBJ,mBAAtB,EAA2C,cAA3C,EAA2D;IACvDK,GAAG,EAAE;MAAA,OAAMJ,YAAN;IAAA,CADkD;IAEvDK,GAAG,EAAE,aAACC,KAAD,EAAU;MACX,IAAIA,KAAK,KAAKN,YAAd,EAA4B;QACxB,MAAMH,uBAAuB,EAA7B;MACH;IACJ;EANsD,CAA3D,EAJ6F,CAa7F;;EACAK,MAAM,CAACC,cAAP,CAAsBJ,mBAAtB,EAA2C,kBAA3C,EAA+D;IAC3DK,GAAG,EAAE;MAAA,OAAM,UAAN;IAAA,CADsD;IAE3DC,GAAG,EAAE,aAACC,KAAD,EAAU;MACX,IAAIA,KAAK,KAAK,UAAd,EAA0B;QACtB,MAAMT,uBAAuB,EAA7B;MACH;IACJ;EAN0D,CAA/D,EAd6F,CAuB7F;;EACAK,MAAM,CAACC,cAAP,CAAsBJ,mBAAtB,EAA2C,uBAA3C,EAAoE;IAChEK,GAAG,EAAE;MAAA,OAAM,UAAN;IAAA,CAD2D;IAEhEC,GAAG,EAAE,aAACC,KAAD,EAAU;MACX,IAAIA,KAAK,KAAK,UAAd,EAA0B;QACtB,MAAMT,uBAAuB,EAA7B;MACH;IACJ;EAN+D,CAApE;AAQH,CAhCM","names":["createInvalidStateError","wrapChannelSplitterNode","channelSplitterNode","channelCount","numberOfOutputs","Object","defineProperty","get","set","value"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\standardized-audio-context\\src\\helpers\\wrap-channel-splitter-node.ts"],"sourcesContent":["import { createInvalidStateError } from '../factories/invalid-state-error';\nimport { TNativeChannelSplitterNode } from '../types';\n\nexport const wrapChannelSplitterNode = (channelSplitterNode: TNativeChannelSplitterNode): void => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n\n    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n\n    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n"]},"metadata":{},"sourceType":"module"}