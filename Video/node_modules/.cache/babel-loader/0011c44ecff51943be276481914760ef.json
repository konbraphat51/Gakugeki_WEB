{"ast":null,"code":"export var computeBufferSize = function computeBufferSize(baseLatency, sampleRate) {\n  if (baseLatency === null) {\n    return 512;\n  }\n\n  return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};","map":{"version":3,"mappings":"AAAA,OAAO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,WAAD,EAA6BC,UAA7B,EAAmD;EAChF,IAAID,WAAW,KAAK,IAApB,EAA0B;IACtB,OAAO,GAAP;EACH;;EAED,OAAOE,IAAI,CAACC,GAAL,CAAS,GAAT,EAAcD,IAAI,CAACE,GAAL,CAAS,KAAT,EAAgBF,IAAI,CAACG,GAAL,CAAS,CAAT,EAAYH,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACK,IAAL,CAAUP,WAAW,GAAGC,UAAxB,CAAX,CAAZ,CAAhB,CAAd,CAAP;AACH,CANM","names":["computeBufferSize","baseLatency","sampleRate","Math","max","min","pow","round","log2"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\standardized-audio-context\\src\\helpers\\compute-buffer-size.ts"],"sourcesContent":["export const computeBufferSize = (baseLatency: null | number, sampleRate: number) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n"]},"metadata":{},"sourceType":"module"}