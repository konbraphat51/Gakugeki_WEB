{"ast":null,"code":"export var createPrependSubscribableThing = function createPrependSubscribableThing(wrapSubscribeFunction) {\n  return function (subscribableThing, prependedValue) {\n    return wrapSubscribeFunction(function (observer) {\n      observer.next(prependedValue);\n      return subscribableThing(observer);\n    });\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,8BAA8B,GACvC,SADSA,8BACT,CAACC,qBAAD;EAAA,OACA,UACIC,iBADJ,EAEIC,cAFJ;IAAA,OAIIF,qBAAqB,CAAC,UAACG,QAAD,EAAa;MAC/BA,QAAQ,CAACC,IAAT,CAAcF,cAAd;MAEA,OAAOD,iBAAiB,CAACE,QAAD,CAAxB;IACH,CAJoB,CAJzB;EAAA,CADA;AAAA,CADG","names":["createPrependSubscribableThing","wrapSubscribeFunction","subscribableThing","prependedValue","observer","next"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\subscribable-things\\src\\factories\\prepend-subscribable-thing.ts"],"sourcesContent":["import { TSubscribableThing, TWrapSubscribeFunctionFunction } from '../types';\n\nexport const createPrependSubscribableThing =\n    (wrapSubscribeFunction: TWrapSubscribeFunctionFunction) =>\n    <TValue, TPrependedValue>(\n        subscribableThing: TSubscribableThing<TValue>,\n        prependedValue: TPrependedValue\n    ): TSubscribableThing<TPrependedValue | TValue> =>\n        wrapSubscribeFunction((observer) => {\n            observer.next(prependedValue);\n\n            return subscribableThing(observer);\n        });\n"]},"metadata":{},"sourceType":"module"}