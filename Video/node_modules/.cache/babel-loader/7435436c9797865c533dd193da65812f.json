{"ast":null,"code":"import _objectSpread from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nexport var createPostMessageFactory = function createPostMessageFactory(generateUniqueNumber) {\n  return function (ongoingRequests, port) {\n    return function (message) {\n      var transferables = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      return new Promise(function (resolve, reject) {\n        var id = generateUniqueNumber(ongoingRequests);\n        ongoingRequests.set(id, {\n          reject: reject,\n          resolve: resolve\n        });\n        port.postMessage(_objectSpread({\n          id: id\n        }, message), transferables);\n      });\n    };\n  };\n};","map":{"version":3,"mappings":";AAEA,OAAO,IAAMA,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,oBAAD,EAA8D;EAClG,OAAO,UAACC,eAAD,EAAwEC,IAAxE,EAA6F;IAChG,OAAO,UAACC,OAAD,EAAoG;MAAA,IAArDC,aAAqD,uEAArB,EAAqB;MACvG,OAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;QACnC,IAAMC,EAAE,GAAGR,oBAAoB,CAACC,eAAD,CAA/B;QAEAA,eAAe,CAACQ,GAAhB,CAAoBD,EAApB,EAAwB;UAAED,MAAM,EAANA,MAAF;UAAUD,OAAO,EAAPA;QAAV,CAAxB;QAEAJ,IAAI,CAACQ,WAAL;UAAmBF,EAAE,EAAFA;QAAnB,GAA0BL,OAA1B,GAAqCC,aAArC;MACH,CANM,CAAP;IAOH,CARD;EASH,CAVD;AAWH,CAZM","names":["createPostMessageFactory","generateUniqueNumber","ongoingRequests","port","message","transferables","Promise","resolve","reject","id","set","postMessage"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\recorder-audio-worklet\\src\\factories\\post-message-factory.ts"],"sourcesContent":["import type { generateUniqueNumber as generateUniqueNumberFunction } from 'fast-unique-numbers';\n\nexport const createPostMessageFactory = (generateUniqueNumber: typeof generateUniqueNumberFunction) => {\n    return (ongoingRequests: Map<number, { reject: Function; resolve: Function }>, port: MessagePort) => {\n        return (message: { method: string; params?: object }, transferables: Transferable[] = []): Promise<void> => {\n            return new Promise((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n\n                ongoingRequests.set(id, { reject, resolve });\n\n                port.postMessage({ id, ...message }, transferables);\n            });\n        };\n    };\n};\n"]},"metadata":{},"sourceType":"module"}