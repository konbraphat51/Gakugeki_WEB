{"ast":null,"code":"export var testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = function testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext) {\n  var nativeAudioBufferSourceNode = nativeContext.createOscillator();\n\n  try {\n    nativeAudioBufferSourceNode.start(-1);\n  } catch (err) {\n    return err instanceof RangeError;\n  }\n\n  return false;\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,gEAAgE,GAAG,SAAnEA,gEAAmE,CAACC,aAAD,EAAkC;EAC9G,IAAMC,2BAA2B,GAAGD,aAAa,CAACE,gBAAd,EAApC;;EAEA,IAAI;IACAD,2BAA2B,CAACE,KAA5B,CAAkC,CAAC,CAAnC;EACH,CAFD,CAEE,OAAOC,GAAP,EAAY;IACV,OAAOA,GAAG,YAAYC,UAAtB;EACH;;EAED,OAAO,KAAP;AACH,CAVM","names":["testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","nativeContext","nativeAudioBufferSourceNode","createOscillator","start","err","RangeError"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\standardized-audio-context\\src\\helpers\\test-audio-scheduled-source-node-start-method-negative-parameters-support.ts"],"sourcesContent":["import { TNativeContext } from '../types';\n\nexport const testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n\n    try {\n        nativeAudioBufferSourceNode.start(-1);\n    } catch (err) {\n        return err instanceof RangeError;\n    }\n\n    return false;\n};\n"]},"metadata":{},"sourceType":"module"}