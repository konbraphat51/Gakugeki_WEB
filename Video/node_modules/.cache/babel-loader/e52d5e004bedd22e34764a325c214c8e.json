{"ast":null,"code":"import { load as loadWorker } from 'media-encoder-host-broker';\nimport { worker } from './worker/worker';\nvar blob = new Blob([worker], {\n  type: 'application/javascript; charset=utf-8'\n});\nvar url = URL.createObjectURL(blob);\nvar mediaEncoderHost = loadWorker(url);\nexport var connect = mediaEncoderHost.connect;\nexport var disconnect = mediaEncoderHost.disconnect;\nexport var encode = mediaEncoderHost.encode;\nexport var instantiate = mediaEncoderHost.instantiate;\nexport var isSupported = mediaEncoderHost.isSupported;\nexport var register = mediaEncoderHost.register;\nURL.revokeObjectURL(url);","map":{"version":3,"mappings":"AAAA,SAASA,IAAI,IAAIC,UAAjB,QAAmC,2BAAnC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,IAAMC,IAAI,GAAS,IAAIC,IAAJ,CAAS,CAACF,MAAD,CAAT,EAAmB;EAAEG,IAAI,EAAE;AAAR,CAAnB,CAAnB;AAEA,IAAMC,GAAG,GAAWC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAApB;AAEA,IAAMM,gBAAgB,GAAGR,UAAU,CAACK,GAAD,CAAnC;AAEA,OAAO,IAAMI,OAAO,GAAGD,gBAAgB,CAACC,OAAjC;AAEP,OAAO,IAAMC,UAAU,GAAGF,gBAAgB,CAACE,UAApC;AAEP,OAAO,IAAMC,MAAM,GAAGH,gBAAgB,CAACG,MAAhC;AAEP,OAAO,IAAMC,WAAW,GAAGJ,gBAAgB,CAACI,WAArC;AAEP,OAAO,IAAMC,WAAW,GAAGL,gBAAgB,CAACK,WAArC;AAEP,OAAO,IAAMC,QAAQ,GAAGN,gBAAgB,CAACM,QAAlC;AAEPR,GAAG,CAACS,eAAJ,CAAoBV,GAApB","names":["load","loadWorker","worker","blob","Blob","type","url","URL","createObjectURL","mediaEncoderHost","connect","disconnect","encode","instantiate","isSupported","register","revokeObjectURL"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\media-encoder-host\\src\\module.ts"],"sourcesContent":["import { load as loadWorker } from 'media-encoder-host-broker';\nimport { worker } from './worker/worker';\n\nconst blob: Blob = new Blob([worker], { type: 'application/javascript; charset=utf-8' });\n\nconst url: string = URL.createObjectURL(blob);\n\nconst mediaEncoderHost = loadWorker(url);\n\nexport const connect = mediaEncoderHost.connect;\n\nexport const disconnect = mediaEncoderHost.disconnect;\n\nexport const encode = mediaEncoderHost.encode;\n\nexport const instantiate = mediaEncoderHost.instantiate;\n\nexport const isSupported = mediaEncoderHost.isSupported;\n\nexport const register = mediaEncoderHost.register;\n\nURL.revokeObjectURL(url);\n"]},"metadata":{},"sourceType":"module"}