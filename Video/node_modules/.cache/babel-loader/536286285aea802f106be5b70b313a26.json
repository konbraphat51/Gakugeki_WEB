{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nexport var createFetchSource = function createFetchSource(createAbortError) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(url) {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(url);\n\n            case 3:\n              response = _context.sent;\n\n              if (!response.ok) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 7;\n              return response.text();\n\n            case 7:\n              _context.t0 = _context.sent;\n              _context.t1 = response.url;\n              return _context.abrupt(\"return\", [_context.t0, _context.t1]);\n\n            case 10:\n              _context.next = 14;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t2 = _context[\"catch\"](0);\n\n            case 14:\n              throw createAbortError();\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"mappings":";;AAEA,OAAO,IAAMA,iBAAiB,GAAwB,SAAzCA,iBAAyC,CAACC,gBAAD,EAAqB;EACvE;IAAA,sEAAO,iBAAOC,GAAP;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAEwBC,KAAK,CAACD,GAAD,CAF7B;;YAAA;cAEOE,QAFP;;cAAA,KAIKA,QAAQ,CAACC,EAJd;gBAAA;gBAAA;cAAA;;cAAA;cAAA,OAKmBD,QAAQ,CAACE,IAAT,EALnB;;YAAA;cAAA;cAAA,cAKoCF,QAAQ,CAACF,GAL7C;cAAA;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;;YAAA;cAAA,MAWGD,gBAAgB,EAXnB;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAP;;IAAA;MAAA;IAAA;EAAA;AAaH,CAdM","names":["createFetchSource","createAbortError","url","fetch","response","ok","text"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\standardized-audio-context\\src\\factories\\fetch-source.ts"],"sourcesContent":["import { TFetchSourceFactory } from '../types';\n\nexport const createFetchSource: TFetchSourceFactory = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n\n            if (response.ok) {\n                return [await response.text(), response.url];\n            }\n        } catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n\n        throw createAbortError();\n    };\n};\n"]},"metadata":{},"sourceType":"module"}