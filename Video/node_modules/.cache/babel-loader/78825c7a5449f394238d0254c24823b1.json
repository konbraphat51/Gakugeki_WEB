{"ast":null,"code":"export var testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = function testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext) {\n  var nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n  nativeAudioBufferSourceNode.start();\n\n  try {\n    nativeAudioBufferSourceNode.start();\n  } catch (_unused) {\n    return true;\n  }\n\n  return false;\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,2DAA2D,GAAG,SAA9DA,2DAA8D,CAACC,aAAD,EAAkC;EACzG,IAAMC,2BAA2B,GAAGD,aAAa,CAACE,kBAAd,EAApC;EAEAD,2BAA2B,CAACE,KAA5B;;EAEA,IAAI;IACAF,2BAA2B,CAACE,KAA5B;EACH,CAFD,CAEE,gBAAM;IACJ,OAAO,IAAP;EACH;;EAED,OAAO,KAAP;AACH,CAZM","names":["testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","nativeContext","nativeAudioBufferSourceNode","createBufferSource","start"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\standardized-audio-context\\src\\helpers\\test-audio-buffer-source-node-start-method-consecutive-calls-support.ts"],"sourcesContent":["import { TNativeContext } from '../types';\n\nexport const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext: TNativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n\n    nativeAudioBufferSourceNode.start();\n\n    try {\n        nativeAudioBufferSourceNode.start();\n    } catch {\n        return true;\n    }\n\n    return false;\n};\n"]},"metadata":{},"sourceType":"module"}