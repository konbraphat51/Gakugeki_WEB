{"ast":null,"code":"import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport var deletePassiveInputConnectionToAudioParam = function deletePassiveInputConnectionToAudioParam(passiveInputs, source, output) {\n  var passiveInputConnections = getValueForKey(passiveInputs, source);\n  var matchingConnection = pickElementFromSet(passiveInputConnections, function (passiveInputConnection) {\n    return passiveInputConnection[0] === output;\n  });\n\n  if (passiveInputConnections.size === 0) {\n    passiveInputs.delete(source);\n  }\n\n  return matchingConnection;\n};","map":{"version":3,"mappings":"AAEA,SAASA,cAAT,QAA+B,qBAA/B;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AAEA,OAAO,IAAMC,wCAAwC,GAAG,SAA3CA,wCAA2C,CACpDC,aADoD,EAEpDC,MAFoD,EAGpDC,MAHoD,EAIpD;EACA,IAAMC,uBAAuB,GAAGN,cAAc,CAACG,aAAD,EAAgBC,MAAhB,CAA9C;EACA,IAAMG,kBAAkB,GAAGN,kBAAkB,CACzCK,uBADyC,EAEzC,UAACE,sBAAD;IAAA,OAA4BA,sBAAsB,CAAC,CAAD,CAAtB,KAA8BH,MAA1D;EAAA,CAFyC,CAA7C;;EAKA,IAAIC,uBAAuB,CAACG,IAAxB,KAAiC,CAArC,EAAwC;IACpCN,aAAa,CAACO,MAAd,CAAqBN,MAArB;EACH;;EAED,OAAOG,kBAAP;AACH,CAhBM","names":["getValueForKey","pickElementFromSet","deletePassiveInputConnectionToAudioParam","passiveInputs","source","output","passiveInputConnections","matchingConnection","passiveInputConnection","size","delete"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\standardized-audio-context\\src\\helpers\\delete-passive-input-connection-to-audio-param.ts"],"sourcesContent":["import { IAudioNode } from '../interfaces';\nimport { TContext, TPassiveAudioParamInputConnection } from '../types';\nimport { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\n\nexport const deletePassiveInputConnectionToAudioParam = <T extends TContext>(\n    passiveInputs: WeakMap<IAudioNode<T>, Set<TPassiveAudioParamInputConnection>>,\n    source: IAudioNode<T>,\n    output: number\n) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(\n        passiveInputConnections,\n        (passiveInputConnection) => passiveInputConnection[0] === output\n    );\n\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n\n    return matchingConnection;\n};\n"]},"metadata":{},"sourceType":"module"}