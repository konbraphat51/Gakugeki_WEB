{"ast":null,"code":"import _objectSpread from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createClass from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar DEFAULT_OPTIONS = {\n  channelCount: 1,\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers',\n  numberOfInputs: 6\n};\nexport var createChannelMergerNodeConstructor = function createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(ChannelMergerNode, _audioNodeConstructor);\n\n    var _super = _createSuper(ChannelMergerNode);\n\n    function ChannelMergerNode(context, options) {\n      _classCallCheck(this, ChannelMergerNode);\n\n      var nativeContext = getNativeContext(context);\n\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n\n      var nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n      var channelMergerNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null;\n      return _super.call(this, context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n    }\n\n    return _createClass(ChannelMergerNode);\n  }(audioNodeConstructor);\n};","map":{"version":3,"mappings":";;;;;AAGA,IAAMA,eAAe,GAAG;EACpBC,YAAY,EAAE,CADM;EAEpBC,gBAAgB,EAAE,UAFE;EAGpBC,qBAAqB,EAAE,UAHH;EAIpBC,cAAc,EAAE;AAJI,CAAxB;AAOA,OAAO,IAAMC,kCAAkC,GAAyC,SAA3EA,kCAA2E,CACpFC,oBADoF,EAEpFC,+BAFoF,EAGpFC,6BAHoF,EAIpFC,gBAJoF,EAKpFC,2BALoF,EAMpF;EACA;IAAA;;IAAA;;IACI,2BAAYC,OAAZ,EAAwBC,OAAxB,EAAgE;MAAA;;MAC5D,IAAMC,aAAa,GAAGJ,gBAAgB,CAACE,OAAD,CAAtC;;MACA,IAAMG,aAAa,mCAAQd,eAAR,GAA4BY,OAA5B,CAAnB;;MACA,IAAMG,uBAAuB,GAAGP,6BAA6B,CAACK,aAAD,EAAgBC,aAAhB,CAA7D;MACA,IAAME,yBAAyB,GAC1BN,2BAA2B,CAACG,aAAD,CAA3B,GAA6CN,+BAA+B,EAA5E,GAAiF,IADtF;MAJ4D,yBAQtDI,OARsD,EAQ7C,KAR6C,EAQtCI,uBARsC,EAQbC,yBARa;IAS/D;;IAVL;EAAA,EAA2DV,oBAA3D;AAYH,CAnBM","names":["DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","numberOfInputs","createChannelMergerNodeConstructor","audioNodeConstructor","createChannelMergerNodeRenderer","createNativeChannelMergerNode","getNativeContext","isNativeOfflineAudioContext","context","options","nativeContext","mergedOptions","nativeChannelMergerNode","channelMergerNodeRenderer"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\standardized-audio-context\\src\\factories\\channel-merger-node-constructor.ts"],"sourcesContent":["import { IChannelMergerOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TChannelMergerNodeConstructorFactory, TContext } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n} as const;\n\nexport const createChannelMergerNodeConstructor: TChannelMergerNodeConstructorFactory = (\n    audioNodeConstructor,\n    createChannelMergerNodeRenderer,\n    createNativeChannelMergerNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class ChannelMergerNode<T extends TContext> extends audioNodeConstructor<T> {\n        constructor(context: T, options?: Partial<IChannelMergerOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null)\n            );\n\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}