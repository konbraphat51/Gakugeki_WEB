{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { renderMethodNotFoundError, renderMissingResponseError, renderUnexpectedResultError } from './error-renderers';\nexport var createMessageHandler = function createMessageHandler(receiver, workerImplementation) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n      var _ref$data, id, method, params, messageHandler, response, synchronousResponse, result, _synchronousResponse$, transferables, message, _err$status, status;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ref$data = _ref.data, id = _ref$data.id, method = _ref$data.method, params = _ref$data.params;\n              messageHandler = workerImplementation[method];\n              _context.prev = 2;\n\n              if (!(messageHandler === undefined)) {\n                _context.next = 5;\n                break;\n              }\n\n              throw renderMethodNotFoundError({\n                method: method\n              });\n\n            case 5:\n              response = params === undefined ? messageHandler() : messageHandler(params);\n\n              if (!(response === undefined)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw renderMissingResponseError({\n                method: method\n              });\n\n            case 8:\n              if (!(response instanceof Promise)) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 11;\n              return response;\n\n            case 11:\n              _context.t0 = _context.sent;\n              _context.next = 15;\n              break;\n\n            case 14:\n              _context.t0 = response;\n\n            case 15:\n              synchronousResponse = _context.t0;\n\n              if (!(id === null)) {\n                _context.next = 21;\n                break;\n              }\n\n              if (!(synchronousResponse.result !== undefined)) {\n                _context.next = 19;\n                break;\n              }\n\n              throw renderUnexpectedResultError({\n                method: method\n              });\n\n            case 19:\n              _context.next = 25;\n              break;\n\n            case 21:\n              if (!(synchronousResponse.result === undefined)) {\n                _context.next = 23;\n                break;\n              }\n\n              throw renderUnexpectedResultError({\n                method: method\n              });\n\n            case 23:\n              result = synchronousResponse.result, _synchronousResponse$ = synchronousResponse.transferables, transferables = _synchronousResponse$ === void 0 ? [] : _synchronousResponse$;\n              receiver.postMessage({\n                id: id,\n                result: result\n              }, transferables);\n\n            case 25:\n              _context.next = 31;\n              break;\n\n            case 27:\n              _context.prev = 27;\n              _context.t1 = _context[\"catch\"](2);\n              message = _context.t1.message, _err$status = _context.t1.status, status = _err$status === void 0 ? -32603 : _err$status;\n              receiver.postMessage({\n                error: {\n                  code: status,\n                  message: message\n                },\n                id: id\n              });\n\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 27]]);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"mappings":";;AAGA,SAASA,yBAAT,EAAoCC,0BAApC,EAAgEC,2BAAhE,QAAmG,mBAAnG;AAEA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAA8BC,QAA9B,EAAmDC,oBAAnD,EAAqG;EACrI;IAAA,uEAAO;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA,iBAASC,IAAT,EAAiBC,EAAjB,aAAiBA,EAAjB,EAAqBC,MAArB,aAAqBA,MAArB,EAA6BC,MAA7B,aAA6BA,MAA7B;cACGC,cADH,GACoBL,oBAAoB,CAACG,MAAD,CADxC;cAAA;;cAAA,MAIKE,cAAc,KAAKC,SAJxB;gBAAA;gBAAA;cAAA;;cAAA,MAKWX,yBAAyB,CAAC;gBAAEQ,MAAM,EAANA;cAAF,CAAD,CALpC;;YAAA;cAQOI,QARP,GASKH,MAAM,KAAKE,SAAX,GACOD,cAA8E,EADrF,GAEOA,cAAuG,CAACD,MAAD,CAXnH;;cAAA,MAaKG,QAAQ,KAAKD,SAblB;gBAAA;gBAAA;cAAA;;cAAA,MAcWV,0BAA0B,CAAC;gBAAEO,MAAM,EAANA;cAAF,CAAD,CAdrC;;YAAA;cAAA,MAiB6BI,QAAQ,YAAYC,OAjBjD;gBAAA;gBAAA;cAAA;;cAAA;cAAA,OAiBiED,QAjBjE;;YAAA;cAAA;cAAA;cAAA;;YAAA;cAAA,cAiB4EA,QAjB5E;;YAAA;cAiBOE,mBAjBP;;cAAA,MAmBKP,EAAE,KAAK,IAnBZ;gBAAA;gBAAA;cAAA;;cAAA,MAoBSO,mBAAmB,CAACC,MAApB,KAA+BJ,SApBxC;gBAAA;gBAAA;cAAA;;cAAA,MAqBeT,2BAA2B,CAAC;gBAAEM,MAAM,EAANA;cAAF,CAAD,CArB1C;;YAAA;cAAA;cAAA;;YAAA;cAAA,MAwBSM,mBAAmB,CAACC,MAApB,KAA+BJ,SAxBxC;gBAAA;gBAAA;cAAA;;cAAA,MAyBeT,2BAA2B,CAAC;gBAAEM,MAAM,EAANA;cAAF,CAAD,CAzB1C;;YAAA;cA4BaO,MA5Bb,GA4BkED,mBA5BlE,CA4BaC,MA5Bb,0BA4BkED,mBA5BlE,CA4BqBE,aA5BrB,EA4BqBA,aA5BrB,sCA4BqC,EA5BrC;cA8BKZ,QAAQ,CAACa,WAAT,CAAqB;gBAAEV,EAAE,EAAFA,EAAF;gBAAMQ,MAAM,EAANA;cAAN,CAArB,EAAqCC,aAArC;;YA9BL;cAAA;cAAA;;YAAA;cAAA;cAAA;cAiCSE,OAjCT,eAiCSA,OAjCT,4BAiCkBC,MAjClB,EAiCkBA,MAjClB,4BAiC2B,CAAC,KAjC5B;cAmCCf,QAAQ,CAACa,WAAT,CAA0D;gBAAEG,KAAK,EAAE;kBAAEC,IAAI,EAAEF,MAAR;kBAAgBD,OAAO,EAAPA;gBAAhB,CAAT;gBAAoCX,EAAE,EAAFA;cAApC,CAA1D;;YAnCD;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAP;;IAAA;MAAA;IAAA;EAAA;AAsCH,CAvCM","names":["renderMethodNotFoundError","renderMissingResponseError","renderUnexpectedResultError","createMessageHandler","receiver","workerImplementation","data","id","method","params","messageHandler","undefined","response","Promise","synchronousResponse","result","transferables","postMessage","message","status","error","code"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\worker-factory\\src\\helpers\\create-message-handler.ts"],"sourcesContent":["import { IAugmentedError } from 'compilerr';\nimport { IBrokerEvent, IErrorNotification, IErrorResponse, IReceiver, IRequest, IWorkerDefinition } from '../interfaces';\nimport { TMessageReceiverWithParams, TMessageReceiverWithoutParams, TWorkerImplementation } from '../types';\nimport { renderMethodNotFoundError, renderMissingResponseError, renderUnexpectedResultError } from './error-renderers';\n\nexport const createMessageHandler = <T extends IWorkerDefinition>(receiver: IReceiver, workerImplementation: TWorkerImplementation<T>) => {\n    return async ({ data: { id, method, params } }: IBrokerEvent<T>) => {\n        const messageHandler = workerImplementation[method];\n\n        try {\n            if (messageHandler === undefined) {\n                throw renderMethodNotFoundError({ method });\n            }\n\n            const response =\n                params === undefined\n                    ? (messageHandler as TMessageReceiverWithoutParams<T[typeof method]['response']>)()\n                    : (messageHandler as TMessageReceiverWithParams<T[typeof method]['params'], T[typeof method]['response']>)(params);\n\n            if (response === undefined) {\n                throw renderMissingResponseError({ method });\n            }\n\n            const synchronousResponse = response instanceof Promise ? await response : response;\n\n            if (id === null) {\n                if (synchronousResponse.result !== undefined) {\n                    throw renderUnexpectedResultError({ method });\n                }\n            } else {\n                if (synchronousResponse.result === undefined) {\n                    throw renderUnexpectedResultError({ method });\n                }\n\n                const { result, transferables = [] } = <IRequest['response']>synchronousResponse;\n\n                receiver.postMessage({ id, result }, transferables);\n            }\n        } catch (err) {\n            const { message, status = -32603 } = <IAugmentedError>err;\n\n            receiver.postMessage(<IErrorNotification | IErrorResponse>{ error: { code: status, message }, id });\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}