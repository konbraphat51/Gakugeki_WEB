{"ast":null,"code":"export var createMidiInputs = function createMidiInputs(wrapSubscribeFunction) {\n  return function (midiAccess) {\n    return wrapSubscribeFunction(function (observer) {\n      var midiInputs = Array.from(midiAccess.inputs.values());\n\n      var emitMidiInputs = function emitMidiInputs() {\n        var midiAccessInputs = midiAccess.inputs;\n\n        if (midiInputs.length !== midiAccessInputs.size || midiInputs.some(function (_ref) {\n          var id = _ref.id;\n          return !midiAccessInputs.has(id);\n        })) {\n          midiInputs = Array.from(midiAccessInputs.values());\n          observer.next(midiInputs);\n        }\n      };\n\n      observer.next(midiInputs);\n      midiAccess.addEventListener('statechange', emitMidiInputs);\n      return function () {\n        return midiAccess.removeEventListener('statechange', emitMidiInputs);\n      };\n    });\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,gBAAgB,GAAuB,SAAvCA,gBAAuC,CAACC,qBAAD,EAA0B;EAC1E,OAAO,UAACC,UAAD;IAAA,OACHD,qBAAqB,CAAC,UAACE,QAAD,EAAa;MAC/B,IAAIC,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWJ,UAAU,CAACK,MAAX,CAAkBC,MAAlB,EAAX,CAAjB;;MAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAK;QACxB,IAAMC,gBAAgB,GAAGR,UAAU,CAACK,MAApC;;QAEA,IAAIH,UAAU,CAACO,MAAX,KAAsBD,gBAAgB,CAACE,IAAvC,IAA+CR,UAAU,CAACS,IAAX,CAAgB;UAAA,IAAGC,EAAH,QAAGA,EAAH;UAAA,OAAY,CAACJ,gBAAgB,CAACK,GAAjB,CAAqBD,EAArB,CAAb;QAAA,CAAhB,CAAnD,EAA2G;UACvGV,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWI,gBAAgB,CAACF,MAAjB,EAAX,CAAb;UAEAL,QAAQ,CAACa,IAAT,CAAcZ,UAAd;QACH;MACJ,CARD;;MAUAD,QAAQ,CAACa,IAAT,CAAcZ,UAAd;MACAF,UAAU,CAACe,gBAAX,CAA4B,aAA5B,EAA2CR,cAA3C;MAEA,OAAO;QAAA,OAAMP,UAAU,CAACgB,mBAAX,CAA+B,aAA/B,EAA8CT,cAA9C,CAAN;MAAA,CAAP;IACH,CAjBoB,CADlB;EAAA,CAAP;AAmBH,CApBM","names":["createMidiInputs","wrapSubscribeFunction","midiAccess","observer","midiInputs","Array","from","inputs","values","emitMidiInputs","midiAccessInputs","length","size","some","id","has","next","addEventListener","removeEventListener"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\subscribable-things\\src\\factories\\midi-inputs.ts"],"sourcesContent":["import { TMidiInputsFactory } from '../types';\n\nexport const createMidiInputs: TMidiInputsFactory = (wrapSubscribeFunction) => {\n    return (midiAccess) =>\n        wrapSubscribeFunction((observer) => {\n            let midiInputs = Array.from(midiAccess.inputs.values());\n\n            const emitMidiInputs = () => {\n                const midiAccessInputs = midiAccess.inputs;\n\n                if (midiInputs.length !== midiAccessInputs.size || midiInputs.some(({ id }) => !midiAccessInputs.has(id))) {\n                    midiInputs = Array.from(midiAccessInputs.values());\n\n                    observer.next(midiInputs);\n                }\n            };\n\n            observer.next(midiInputs);\n            midiAccess.addEventListener('statechange', emitMidiInputs);\n\n            return () => midiAccess.removeEventListener('statechange', emitMidiInputs);\n        });\n};\n"]},"metadata":{},"sourceType":"module"}