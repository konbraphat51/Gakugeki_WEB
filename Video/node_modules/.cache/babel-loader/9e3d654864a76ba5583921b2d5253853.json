{"ast":null,"code":"export var validateState = function validateState(expectedStates, currentState) {\n  if (!expectedStates.includes(currentState)) {\n    throw new Error(\"Expected the state to be \".concat(expectedStates.map(function (expectedState) {\n      return \"\\\"\".concat(expectedState, \"\\\"\");\n    }).join(' or '), \" but it was \\\"\").concat(currentState, \"\\\".\"));\n  }\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,cAAD,EAA2BC,YAA3B,EAAyD;EAClF,IAAI,CAACD,cAAc,CAACE,QAAf,CAAwBD,YAAxB,CAAL,EAA4C;IACxC,MAAM,IAAIE,KAAJ,oCAC0BH,cAAc,CACrCI,GADuB,CACnB,UAACC,aAAD;MAAA,mBAAuBA,aAAvB;IAAA,CADmB,EAEvBC,IAFuB,CAElB,MAFkB,CAD1B,2BAG+BL,YAH/B,SAAN;EAKH;AACJ,CARM","names":["validateState","expectedStates","currentState","includes","Error","map","expectedState","join"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\recorder-audio-worklet\\src\\functions\\validate-state.ts"],"sourcesContent":["import { TState } from '../types';\n\nexport const validateState = (expectedStates: TState[], currentState: TState): void => {\n    if (!expectedStates.includes(currentState)) {\n        throw new Error(\n            `Expected the state to be ${expectedStates\n                .map((expectedState) => `\"${expectedState}\"`)\n                .join(' or ')} but it was \"${currentState}\".`\n        );\n    }\n};\n"]},"metadata":{},"sourceType":"module"}