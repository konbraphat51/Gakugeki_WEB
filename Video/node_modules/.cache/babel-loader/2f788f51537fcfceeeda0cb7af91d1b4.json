{"ast":null,"code":"export var cloneAudioWorkletNodeOptions = function cloneAudioWorkletNodeOptions(audioWorkletNodeOptions) {\n  return new Promise(function (resolve, reject) {\n    var _MessageChannel = new MessageChannel(),\n        port1 = _MessageChannel.port1,\n        port2 = _MessageChannel.port2;\n\n    port1.onmessage = function (_ref) {\n      var data = _ref.data;\n      port1.close();\n      port2.close();\n      resolve(data);\n    };\n\n    port1.onmessageerror = function (_ref2) {\n      var data = _ref2.data;\n      port1.close();\n      port2.close();\n      reject(data);\n    }; // This will throw an error if the audioWorkletNodeOptions are not clonable.\n\n\n    port2.postMessage(audioWorkletNodeOptions);\n  });\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACC,uBAAD,EAAyF;EACjI,OAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;IACnC,sBAAyB,IAAIC,cAAJ,EAAzB;IAAA,IAAQC,KAAR,mBAAQA,KAAR;IAAA,IAAeC,KAAf,mBAAeA,KAAf;;IAEAD,KAAK,CAACE,SAAN,GAAkB,gBAAa;MAAA,IAAVC,IAAU,QAAVA,IAAU;MAC3BH,KAAK,CAACI,KAAN;MACAH,KAAK,CAACG,KAAN;MAEAP,OAAO,CAACM,IAAD,CAAP;IACH,CALD;;IAMAH,KAAK,CAACK,cAAN,GAAuB,iBAAa;MAAA,IAAVF,IAAU,SAAVA,IAAU;MAChCH,KAAK,CAACI,KAAN;MACAH,KAAK,CAACG,KAAN;MAEAN,MAAM,CAACK,IAAD,CAAN;IACH,CALD,CATmC,CAgBnC;;;IACAF,KAAK,CAACK,WAAN,CAAkBX,uBAAlB;EACH,CAlBM,CAAP;AAmBH,CApBM","names":["cloneAudioWorkletNodeOptions","audioWorkletNodeOptions","Promise","resolve","reject","MessageChannel","port1","port2","onmessage","data","close","onmessageerror","postMessage"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\standardized-audio-context\\src\\helpers\\clone-audio-worklet-node-options.ts"],"sourcesContent":["import { IAudioWorkletNodeOptions } from '../interfaces';\n\nexport const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions: IAudioWorkletNodeOptions): Promise<IAudioWorkletNodeOptions> => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n\n            reject(data);\n        };\n\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}