{"ast":null,"code":"export var createTestOfflineAudioContextCurrentTimeSupport = function createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor) {\n  return function () {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return Promise.resolve(false);\n    }\n\n    var nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100); // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n\n    var gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n      channelCount: 1,\n      channelCountMode: 'explicit',\n      channelInterpretation: 'discrete',\n      gain: 0\n    }); // Bug #21: Safari does not support promises yet.\n\n    return new Promise(function (resolve) {\n      nativeOfflineAudioContext.oncomplete = function () {\n        gainNode.disconnect();\n        resolve(nativeOfflineAudioContext.currentTime !== 0);\n      };\n\n      nativeOfflineAudioContext.startRendering();\n    });\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,+CAA+C,GAAsD,SAArGA,+CAAqG,CAC9GC,oBAD8G,EAE9GC,oCAF8G,EAG9G;EACA,OAAO,YAAK;IACR,IAAIA,oCAAoC,KAAK,IAA7C,EAAmD;MAC/C,OAAOC,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;IACH;;IAED,IAAMC,yBAAyB,GAAG,IAAIH,oCAAJ,CAAyC,CAAzC,EAA4C,CAA5C,EAA+C,KAA/C,CAAlC,CALQ,CAOR;;IACA,IAAMI,QAAQ,GAAGL,oBAAoB,CAACI,yBAAD,EAA4B;MAC7DE,YAAY,EAAE,CAD+C;MAE7DC,gBAAgB,EAAE,UAF2C;MAG7DC,qBAAqB,EAAE,UAHsC;MAI7DC,IAAI,EAAE;IAJuD,CAA5B,CAArC,CARQ,CAeR;;IACA,OAAO,IAAIP,OAAJ,CAAY,UAACC,OAAD,EAAY;MAC3BC,yBAAyB,CAACM,UAA1B,GAAuC,YAAK;QACxCL,QAAQ,CAACM,UAAT;QAEAR,OAAO,CAACC,yBAAyB,CAACQ,WAA1B,KAA0C,CAA3C,CAAP;MACH,CAJD;;MAKAR,yBAAyB,CAACS,cAA1B;IACH,CAPM,CAAP;EAQH,CAxBD;AAyBH,CA7BM","names":["createTestOfflineAudioContextCurrentTimeSupport","createNativeGainNode","nativeOfflineAudioContextConstructor","Promise","resolve","nativeOfflineAudioContext","gainNode","channelCount","channelCountMode","channelInterpretation","gain","oncomplete","disconnect","currentTime","startRendering"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\standardized-audio-context\\src\\factories\\test-offline-audio-context-current-time-support.ts"],"sourcesContent":["import { TTestOfflineAudioContextCurrentTimeSupportFactory } from '../types';\n\nexport const createTestOfflineAudioContextCurrentTimeSupport: TTestOfflineAudioContextCurrentTimeSupportFactory = (\n    createNativeGainNode,\n    nativeOfflineAudioContextConstructor\n) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n"]},"metadata":{},"sourceType":"module"}