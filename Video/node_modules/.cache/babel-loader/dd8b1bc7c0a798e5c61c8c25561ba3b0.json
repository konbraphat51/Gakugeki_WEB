{"ast":null,"code":"export var createGeolocation = function createGeolocation(emitNotSupportedError, window, wrapSubscribeFunction) {\n  return function (options) {\n    return wrapSubscribeFunction(function (observer) {\n      if (window === null || window.navigator === undefined || window.navigator.geolocation === undefined || window.navigator.geolocation.clearWatch === undefined || window.navigator.geolocation.watchPosition === undefined) {\n        return emitNotSupportedError(observer);\n      }\n\n      var watchId = window.navigator.geolocation.watchPosition(function (position) {\n        return observer.next(position);\n      }, function (err) {\n        return observer.error(err);\n      }, options);\n      return function () {\n        return window.navigator.geolocation.clearWatch(watchId);\n      };\n    });\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAC7BC,qBAD6B,EAE7BC,MAF6B,EAG7BC,qBAH6B,EAI7B;EACA,OAAO,UAACC,OAAD;IAAA,OACHD,qBAAqB,CAAC,UAACE,QAAD,EAAa;MAC/B,IACIH,MAAM,KAAK,IAAX,IACAA,MAAM,CAACI,SAAP,KAAqBC,SADrB,IAEAL,MAAM,CAACI,SAAP,CAAiBE,WAAjB,KAAiCD,SAFjC,IAGAL,MAAM,CAACI,SAAP,CAAiBE,WAAjB,CAA6BC,UAA7B,KAA4CF,SAH5C,IAIAL,MAAM,CAACI,SAAP,CAAiBE,WAAjB,CAA6BE,aAA7B,KAA+CH,SALnD,EAME;QACE,OAAON,qBAAqB,CAACI,QAAD,CAA5B;MACH;;MAED,IAAMM,OAAO,GAAGT,MAAM,CAACI,SAAP,CAAiBE,WAAjB,CAA6BE,aAA7B,CACZ,UAACE,QAAD;QAAA,OAAcP,QAAQ,CAACQ,IAAT,CAAcD,QAAd,CAAd;MAAA,CADY,EAEZ,UAACE,GAAD;QAAA,OAAST,QAAQ,CAACU,KAAT,CAAeD,GAAf,CAAT;MAAA,CAFY,EAGZV,OAHY,CAAhB;MAMA,OAAO;QAAA,OAAMF,MAAM,CAACI,SAAP,CAAiBE,WAAjB,CAA6BC,UAA7B,CAAwCE,OAAxC,CAAN;MAAA,CAAP;IACH,CAlBoB,CADlB;EAAA,CAAP;AAoBH,CAzBM","names":["createGeolocation","emitNotSupportedError","window","wrapSubscribeFunction","options","observer","navigator","undefined","geolocation","clearWatch","watchPosition","watchId","position","next","err","error"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\subscribable-things\\src\\factories\\geolocation.ts"],"sourcesContent":["import { TEmitNotSupportedErrorFunction, TSubscribableThing, TWindow, TWrapSubscribeFunctionFunction } from '../types';\n\nexport const createGeolocation = (\n    emitNotSupportedError: TEmitNotSupportedErrorFunction,\n    window: null | TWindow,\n    wrapSubscribeFunction: TWrapSubscribeFunctionFunction\n) => {\n    return (options?: PositionOptions): TSubscribableThing<GeolocationPosition> =>\n        wrapSubscribeFunction((observer) => {\n            if (\n                window === null ||\n                window.navigator === undefined ||\n                window.navigator.geolocation === undefined ||\n                window.navigator.geolocation.clearWatch === undefined ||\n                window.navigator.geolocation.watchPosition === undefined\n            ) {\n                return emitNotSupportedError(observer);\n            }\n\n            const watchId = window.navigator.geolocation.watchPosition(\n                (position) => observer.next(position),\n                (err) => observer.error(err),\n                options\n            );\n\n            return () => window.navigator.geolocation.clearWatch(watchId);\n        });\n};\n"]},"metadata":{},"sourceType":"module"}