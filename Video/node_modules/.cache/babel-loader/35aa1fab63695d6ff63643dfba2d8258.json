{"ast":null,"code":"import _defineProperty from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { generateUniqueNumber } from 'fast-unique-numbers';\nimport { isMessagePort } from './guards/message-port';\nimport { extendBrokerImplementation } from './helpers/extend-broker-implementation';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\n\nexport * from './interfaces/index';\nexport * from './types/index';\nvar ONGOING_REQUESTS = new WeakMap();\n\nvar createOrGetOngoingRequests = function createOrGetOngoingRequests(sender) {\n  if (ONGOING_REQUESTS.has(sender)) {\n    // @todo TypeScript needs to be convinced that has() works as expected.\n    return ONGOING_REQUESTS.get(sender);\n  }\n\n  var ongoingRequests = new Map();\n  ONGOING_REQUESTS.set(sender, ongoingRequests);\n  return ongoingRequests;\n};\n\nexport var createBroker = function createBroker(brokerImplementation) {\n  var fullBrokerImplementation = extendBrokerImplementation(brokerImplementation);\n  return function (sender) {\n    var ongoingRequests = createOrGetOngoingRequests(sender);\n    sender.addEventListener('message', function (_ref) {\n      var message = _ref.data;\n      var id = message.id;\n\n      if (id !== null && ongoingRequests.has(id)) {\n        var _ongoingRequests$get = ongoingRequests.get(id),\n            reject = _ongoingRequests$get.reject,\n            resolve = _ongoingRequests$get.resolve;\n\n        ongoingRequests.delete(id);\n\n        if (message.error === undefined) {\n          resolve(message.result);\n        } else {\n          reject(new Error(message.error.message));\n        }\n      }\n    });\n\n    if (isMessagePort(sender)) {\n      sender.start();\n    }\n\n    var call = function call(method) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var transferables = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      return new Promise(function (resolve, reject) {\n        var id = generateUniqueNumber(ongoingRequests);\n        ongoingRequests.set(id, {\n          reject: reject,\n          resolve: resolve\n        });\n\n        if (params === null) {\n          sender.postMessage({\n            id: id,\n            method: method\n          }, transferables);\n        } else {\n          sender.postMessage({\n            id: id,\n            method: method,\n            params: params\n          }, transferables);\n        }\n      });\n    };\n\n    var notify = function notify(method, params) {\n      var transferables = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      sender.postMessage({\n        id: null,\n        method: method,\n        params: params\n      }, transferables);\n    };\n\n    var functions = {};\n\n    for (var _i = 0, _Object$entries = Object.entries(fullBrokerImplementation); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          key = _Object$entries$_i[0],\n          handler = _Object$entries$_i[1];\n\n      functions = _objectSpread(_objectSpread({}, functions), {}, _defineProperty({}, key, handler({\n        call: call,\n        notify: notify\n      })));\n    }\n\n    return _objectSpread({}, functions);\n  };\n};","map":{"version":3,"mappings":"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","names":["generateUniqueNumber","isMessagePort","extendBrokerImplementation","ONGOING_REQUESTS","WeakMap","createOrGetOngoingRequests","sender","has","get","ongoingRequests","Map","set","createBroker","brokerImplementation","fullBrokerImplementation","addEventListener","message","data","id","reject","resolve","delete","error","undefined","result","Error","start","call","method","params","transferables","Promise","postMessage","notify","functions","Object","entries","key","handler"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\broker-factory\\src\\module.ts"],"sourcesContent":["import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { IWorkerDefinition, IWorkerErrorMessage, IWorkerResultMessage } from 'worker-factory';\nimport { isMessagePort } from './guards/message-port';\nimport { extendBrokerImplementation } from './helpers/extend-broker-implementation';\nimport { IBrokerDefinition, IDefaultBrokerDefinition, IWorkerEvent } from './interfaces';\nimport { TBrokerImplementation } from './types';\n\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\n\nconst ONGOING_REQUESTS = new WeakMap<MessagePort | Worker, Map<number, { reject: Function; resolve: Function }>>();\n\nconst createOrGetOngoingRequests = (sender: MessagePort | Worker): Map<number, { reject: Function; resolve: Function }> => {\n    if (ONGOING_REQUESTS.has(sender)) {\n        // @todo TypeScript needs to be convinced that has() works as expected.\n        return <Map<number, { reject: Function; resolve: Function }>>ONGOING_REQUESTS.get(sender);\n    }\n\n    const ongoingRequests: Map<number, { reject: Function; resolve: Function }> = new Map();\n\n    ONGOING_REQUESTS.set(sender, ongoingRequests);\n\n    return ongoingRequests;\n};\n\nexport const createBroker = <T extends IBrokerDefinition, U extends IWorkerDefinition>(\n    brokerImplementation: TBrokerImplementation<T, U>\n): ((sender: MessagePort | Worker) => T & IDefaultBrokerDefinition) => {\n    const fullBrokerImplementation = extendBrokerImplementation(brokerImplementation);\n\n    return (sender: MessagePort | Worker) => {\n        const ongoingRequests = createOrGetOngoingRequests(sender);\n\n        sender.addEventListener('message', <EventListener>(({ data: message }: IWorkerEvent) => {\n            const { id } = message;\n\n            if (id !== null && ongoingRequests.has(id)) {\n                const { reject, resolve } = <{ reject: Function; resolve: Function }>ongoingRequests.get(id);\n\n                ongoingRequests.delete(id);\n\n                if ((<IWorkerErrorMessage>message).error === undefined) {\n                    resolve((<IWorkerResultMessage>message).result);\n                } else {\n                    reject(new Error((<IWorkerErrorMessage>message).error.message));\n                }\n            }\n        }));\n\n        if (isMessagePort(sender)) {\n            sender.start();\n        }\n\n        const call = <V extends keyof U>(method: V, params: U[V]['params'] = null, transferables: U[V]['transferables'] = []) => {\n            return new Promise<U[V]['response']['result']>((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n\n                ongoingRequests.set(id, { reject, resolve });\n\n                if (params === null) {\n                    sender.postMessage({ id, method }, <Transferable[]>transferables);\n                } else {\n                    sender.postMessage({ id, method, params }, <Transferable[]>transferables);\n                }\n            });\n        };\n        const notify = <V extends keyof U>(method: V, params: U[V]['params'], transferables: U[V]['transferables'] = []) => {\n            sender.postMessage({ id: null, method, params }, <Transferable[]>transferables);\n        };\n\n        let functions: object = {};\n\n        for (const [key, handler] of Object.entries(fullBrokerImplementation)) {\n            functions = { ...functions, [key]: handler({ call, notify }) };\n        }\n\n        return <T & IDefaultBrokerDefinition>{ ...functions };\n    };\n};\n"]},"metadata":{},"sourceType":"module"}