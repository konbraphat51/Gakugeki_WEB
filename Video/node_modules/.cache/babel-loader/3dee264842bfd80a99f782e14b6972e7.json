{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"data\"];\nexport var createBlobEventFactory = function createBlobEventFactory(nativeBlobEventConstructor) {\n  return function (type, blobEventInit) {\n    // Bug #14: Safari does not yet support the BlobEvent.\n    if (nativeBlobEventConstructor === null) {\n      var data = blobEventInit.data,\n          eventInit = _objectWithoutProperties(blobEventInit, _excluded);\n\n      var fakeBlobEvent = new Event(type, eventInit);\n      fakeBlobEvent.data = data;\n      return fakeBlobEvent;\n    }\n\n    return new nativeBlobEventConstructor(type, blobEventInit);\n  };\n};","map":{"version":3,"mappings":";;AAGA,OAAO,IAAMA,sBAAsB,GAA6B,SAAnDA,sBAAmD,CAACC,0BAAD,EAA+B;EAC3F,OAAO,UAACC,IAAD,EAAOC,aAAP,EAAwB;IAC3B;IACA,IAAIF,0BAA0B,KAAK,IAAnC,EAAyC;MACrC,IAAQG,IAAR,GAA+BD,aAA/B,CAAQC,IAAR;MAAA,IAAiBC,SAAjB,4BAA+BF,aAA/B;;MACA,IAAMG,aAAa,GAAe,IAAIC,KAAJ,CAAUL,IAAV,EAAgBG,SAAhB,CAAlC;MAEwEC,aAAc,CAACF,IAAf,GAAsBA,IAAtB;MAExE,OAAOE,aAAP;IACH;;IAED,OAAO,IAAIL,0BAAJ,CAA+BC,IAA/B,EAAqCC,aAArC,CAAP;EACH,CAZD;AAaH,CAdM","names":["createBlobEventFactory","nativeBlobEventConstructor","type","blobEventInit","data","eventInit","fakeBlobEvent","Event"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\extendable-media-recorder\\src\\factories\\blob-event-factory.ts"],"sourcesContent":["import { IBlobEvent } from '../interfaces';\nimport { TBlobEventFactoryFactory } from '../types';\n\nexport const createBlobEventFactory: TBlobEventFactoryFactory = (nativeBlobEventConstructor) => {\n    return (type, blobEventInit) => {\n        // Bug #14: Safari does not yet support the BlobEvent.\n        if (nativeBlobEventConstructor === null) {\n            const { data, ...eventInit } = blobEventInit;\n            const fakeBlobEvent = <IBlobEvent>new Event(type, eventInit);\n\n            (<Omit<IBlobEvent, 'data'> & { -readonly [P in 'data']: IBlobEvent[P] }>fakeBlobEvent).data = data;\n\n            return fakeBlobEvent;\n        }\n\n        return new nativeBlobEventConstructor(type, blobEventInit);\n    };\n};\n"]},"metadata":{},"sourceType":"module"}