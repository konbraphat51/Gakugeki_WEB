{"ast":null,"code":"// Safari up to version 12.0 (but not v12.1) didn't return the destination in case it was an AudioNode.\nexport var createTestAudioNodeConnectMethodSupport = function createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor) {\n  return function () {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return false;\n    }\n\n    var nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n    var nativeGainNode = nativeOfflineAudioContext.createGain();\n    var isSupported = nativeGainNode.connect(nativeGainNode) === nativeGainNode;\n    nativeGainNode.disconnect(nativeGainNode);\n    return isSupported;\n  };\n};","map":{"version":3,"mappings":"AAEA;AACA,OAAO,IAAMA,uCAAuC,GAA8C,SAArFA,uCAAqF,CAC9FC,oCAD8F,EAE9F;EACA,OAAO,YAAK;IACR,IAAIA,oCAAoC,KAAK,IAA7C,EAAmD;MAC/C,OAAO,KAAP;IACH;;IAED,IAAMC,yBAAyB,GAAG,IAAID,oCAAJ,CAAyC,CAAzC,EAA4C,CAA5C,EAA+C,KAA/C,CAAlC;IACA,IAAME,cAAc,GAAGD,yBAAyB,CAACE,UAA1B,EAAvB;IACA,IAAMC,WAAW,GAAGF,cAAc,CAACG,OAAf,CAAuBH,cAAvB,MAA2CA,cAA/D;IAEAA,cAAc,CAACI,UAAf,CAA0BJ,cAA1B;IAEA,OAAOE,WAAP;EACH,CAZD;AAaH,CAhBM","names":["createTestAudioNodeConnectMethodSupport","nativeOfflineAudioContextConstructor","nativeOfflineAudioContext","nativeGainNode","createGain","isSupported","connect","disconnect"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\standardized-audio-context\\src\\factories\\test-audio-node-connect-method-support.ts"],"sourcesContent":["import { TTestAudioNodeConnectMethodSupportFactory } from '../types';\n\n// Safari up to version 12.0 (but not v12.1) didn't return the destination in case it was an AudioNode.\nexport const createTestAudioNodeConnectMethodSupport: TTestAudioNodeConnectMethodSupportFactory = (\n    nativeOfflineAudioContextConstructor\n) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeGainNode = nativeOfflineAudioContext.createGain();\n        const isSupported = nativeGainNode.connect(nativeGainNode) === nativeGainNode;\n\n        nativeGainNode.disconnect(nativeGainNode);\n\n        return isSupported;\n    };\n};\n"]},"metadata":{},"sourceType":"module"}