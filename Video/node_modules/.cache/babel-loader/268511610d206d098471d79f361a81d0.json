{"ast":null,"code":"export var createReports = function createReports(emitNotSupportedError, window, wrapSubscribeFunction) {\n  return function (options) {\n    return wrapSubscribeFunction(function (observer) {\n      if (window === null || window.ReportingObserver === undefined) {\n        return emitNotSupportedError(observer);\n      }\n\n      var reportingObserver = new window.ReportingObserver(function (reportList) {\n        return observer.next(reportList);\n      }, options);\n      reportingObserver.observe();\n      return function () {\n        return reportingObserver.disconnect();\n      };\n    });\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,aAAa,GAAoB,SAAjCA,aAAiC,CAACC,qBAAD,EAAwBC,MAAxB,EAAgCC,qBAAhC,EAAyD;EACnG,OAAO,UAACC,OAAD;IAAA,OACHD,qBAAqB,CAAC,UAACE,QAAD,EAAa;MAC/B,IAAIH,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACI,iBAAP,KAA6BC,SAApD,EAA+D;QAC3D,OAAON,qBAAqB,CAACI,QAAD,CAA5B;MACH;;MAED,IAAMG,iBAAiB,GAAG,IAAIN,MAAM,CAACI,iBAAX,CAA6B,UAACG,UAAD;QAAA,OAAgBJ,QAAQ,CAACK,IAAT,CAAcD,UAAd,CAAhB;MAAA,CAA7B,EAAwEL,OAAxE,CAA1B;MAEAI,iBAAiB,CAACG,OAAlB;MAEA,OAAO;QAAA,OAAMH,iBAAiB,CAACI,UAAlB,EAAN;MAAA,CAAP;IACH,CAVoB,CADlB;EAAA,CAAP;AAYH,CAbM","names":["createReports","emitNotSupportedError","window","wrapSubscribeFunction","options","observer","ReportingObserver","undefined","reportingObserver","reportList","next","observe","disconnect"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\subscribable-things\\src\\factories\\reports.ts"],"sourcesContent":["import { TReportsFactory } from '../types';\n\nexport const createReports: TReportsFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (options) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.ReportingObserver === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const reportingObserver = new window.ReportingObserver((reportList) => observer.next(reportList), options);\n\n            reportingObserver.observe();\n\n            return () => reportingObserver.disconnect();\n        });\n};\n"]},"metadata":{},"sourceType":"module"}