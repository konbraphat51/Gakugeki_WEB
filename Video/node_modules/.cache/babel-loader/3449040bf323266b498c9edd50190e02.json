{"ast":null,"code":"import _objectSpread from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar DEFAULT_OPTIONS = {\n  buffer: null,\n  channelCount: 2,\n  channelCountMode: 'clamped-max',\n  channelInterpretation: 'speakers',\n  disableNormalization: false\n};\nexport var createConvolverNodeConstructor = function createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(ConvolverNode, _audioNodeConstructor);\n\n    var _super = _createSuper(ConvolverNode);\n\n    function ConvolverNode(context, options) {\n      var _this;\n\n      _classCallCheck(this, ConvolverNode);\n\n      var nativeContext = getNativeContext(context);\n\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n\n      var nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n      var isOffline = isNativeOfflineAudioContext(nativeContext);\n      var convolverNodeRenderer = isOffline ? createConvolverNodeRenderer() : null;\n      _this = _super.call(this, context, false, nativeConvolverNode, convolverNodeRenderer);\n      _this._isBufferNullified = false;\n      _this._nativeConvolverNode = nativeConvolverNode;\n\n      if (mergedOptions.buffer !== null) {\n        setAudioNodeTailTime(_assertThisInitialized(_this), mergedOptions.buffer.duration);\n      }\n\n      return _this;\n    }\n\n    _createClass(ConvolverNode, [{\n      key: \"buffer\",\n      get: function get() {\n        if (this._isBufferNullified) {\n          return null;\n        }\n\n        return this._nativeConvolverNode.buffer;\n      },\n      set: function set(value) {\n        this._nativeConvolverNode.buffer = value; // Bug #115: Safari does not allow to set the buffer to null.\n\n        if (value === null && this._nativeConvolverNode.buffer !== null) {\n          var nativeContext = this._nativeConvolverNode.context;\n          this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, 44100);\n          this._isBufferNullified = true;\n          setAudioNodeTailTime(this, 0);\n        } else {\n          this._isBufferNullified = false;\n          setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);\n        }\n      }\n    }, {\n      key: \"normalize\",\n      get: function get() {\n        return this._nativeConvolverNode.normalize;\n      },\n      set: function set(value) {\n        this._nativeConvolverNode.normalize = value;\n      }\n    }]);\n\n    return ConvolverNode;\n  }(audioNodeConstructor);\n};","map":{"version":3,"mappings":";;;;;;AAGA,IAAMA,eAAe,GAAG;EACpBC,MAAM,EAAE,IADY;EAEpBC,YAAY,EAAE,CAFM;EAGpBC,gBAAgB,EAAE,aAHE;EAIpBC,qBAAqB,EAAE,UAJH;EAKpBC,oBAAoB,EAAE;AALF,CAAxB;AAQA,OAAO,IAAMC,8BAA8B,GAAqC,SAAnEA,8BAAmE,CAC5EC,oBAD4E,EAE5EC,2BAF4E,EAG5EC,yBAH4E,EAI5EC,gBAJ4E,EAK5EC,2BAL4E,EAM5EC,oBAN4E,EAO5E;EACA;IAAA;;IAAA;;IAKI,uBAAYC,OAAZ,EAAwBC,OAAxB,EAA4D;MAAA;;MAAA;;MACxD,IAAMC,aAAa,GAAGL,gBAAgB,CAACG,OAAD,CAAtC;;MACA,IAAMG,aAAa,mCAAQhB,eAAR,GAA4Bc,OAA5B,CAAnB;;MACA,IAAMG,mBAAmB,GAAGR,yBAAyB,CAACM,aAAD,EAAgBC,aAAhB,CAArD;MACA,IAAME,SAAS,GAAGP,2BAA2B,CAACI,aAAD,CAA7C;MACA,IAAMI,qBAAqB,GAAiCD,SAAS,GAAGV,2BAA2B,EAA9B,GAAmC,IAAxG;MAEA,0BAAMK,OAAN,EAAe,KAAf,EAAsBI,mBAAtB,EAA2CE,qBAA3C;MAEA,MAAKC,kBAAL,GAA0B,KAA1B;MACA,MAAKC,oBAAL,GAA4BJ,mBAA5B;;MAEA,IAAID,aAAa,CAACf,MAAd,KAAyB,IAA7B,EAAmC;QAC/BW,oBAAoB,gCAAOI,aAAa,CAACf,MAAd,CAAqBqB,QAA5B,CAApB;MACH;;MAduD;IAe3D;;IApBL;MAAA;MAAA,KAsBI,eAAU;QACN,IAAI,KAAKF,kBAAT,EAA6B;UACzB,OAAO,IAAP;QACH;;QAED,OAAO,KAAKC,oBAAL,CAA0BpB,MAAjC;MACH,CA5BL;MAAA,KA8BI,aAAWsB,KAAX,EAAgB;QACZ,KAAKF,oBAAL,CAA0BpB,MAA1B,GAAmCsB,KAAnC,CADY,CAGZ;;QACA,IAAIA,KAAK,KAAK,IAAV,IAAkB,KAAKF,oBAAL,CAA0BpB,MAA1B,KAAqC,IAA3D,EAAiE;UAC7D,IAAMc,aAAa,GAAG,KAAKM,oBAAL,CAA0BR,OAAhD;UAEA,KAAKQ,oBAAL,CAA0BpB,MAA1B,GAAmCc,aAAa,CAACS,YAAd,CAA2B,CAA3B,EAA8B,CAA9B,EAAiC,KAAjC,CAAnC;UACA,KAAKJ,kBAAL,GAA0B,IAA1B;UAEAR,oBAAoB,CAAC,IAAD,EAAO,CAAP,CAApB;QACH,CAPD,MAOO;UACH,KAAKQ,kBAAL,GAA0B,KAA1B;UAEAR,oBAAoB,CAAC,IAAD,EAAO,KAAKS,oBAAL,CAA0BpB,MAA1B,KAAqC,IAArC,GAA4C,CAA5C,GAAgD,KAAKoB,oBAAL,CAA0BpB,MAA1B,CAAiCqB,QAAxF,CAApB;QACH;MACJ;IA9CL;MAAA;MAAA,KAgDI,eAAa;QACT,OAAO,KAAKD,oBAAL,CAA0BI,SAAjC;MACH,CAlDL;MAAA,KAoDI,aAAcF,KAAd,EAAmB;QACf,KAAKF,oBAAL,CAA0BI,SAA1B,GAAsCF,KAAtC;MACH;IAtDL;;IAAA;EAAA,EAAuDhB,oBAAvD;AAwDH,CAhEM","names":["DEFAULT_OPTIONS","buffer","channelCount","channelCountMode","channelInterpretation","disableNormalization","createConvolverNodeConstructor","audioNodeConstructor","createConvolverNodeRenderer","createNativeConvolverNode","getNativeContext","isNativeOfflineAudioContext","setAudioNodeTailTime","context","options","nativeContext","mergedOptions","nativeConvolverNode","isOffline","convolverNodeRenderer","_isBufferNullified","_nativeConvolverNode","duration","value","createBuffer","normalize"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\standardized-audio-context\\src\\factories\\convolver-node-constructor.ts"],"sourcesContent":["import { IConvolverNode, IConvolverOptions } from '../interfaces';\nimport { TAnyAudioBuffer, TAudioNodeRenderer, TContext, TConvolverNodeConstructorFactory, TNativeConvolverNode } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    disableNormalization: false\n} as const;\n\nexport const createConvolverNodeConstructor: TConvolverNodeConstructorFactory = (\n    audioNodeConstructor,\n    createConvolverNodeRenderer,\n    createNativeConvolverNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    setAudioNodeTailTime\n) => {\n    return class ConvolverNode<T extends TContext> extends audioNodeConstructor<T> implements IConvolverNode<T> {\n        private _isBufferNullified: boolean;\n\n        private _nativeConvolverNode: TNativeConvolverNode;\n\n        constructor(context: T, options?: Partial<IConvolverOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const convolverNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createConvolverNodeRenderer() : null);\n\n            super(context, false, nativeConvolverNode, convolverNodeRenderer);\n\n            this._isBufferNullified = false;\n            this._nativeConvolverNode = nativeConvolverNode;\n\n            if (mergedOptions.buffer !== null) {\n                setAudioNodeTailTime(this, mergedOptions.buffer.duration);\n            }\n        }\n\n        get buffer(): null | TAnyAudioBuffer {\n            if (this._isBufferNullified) {\n                return null;\n            }\n\n            return this._nativeConvolverNode.buffer;\n        }\n\n        set buffer(value) {\n            this._nativeConvolverNode.buffer = value;\n\n            // Bug #115: Safari does not allow to set the buffer to null.\n            if (value === null && this._nativeConvolverNode.buffer !== null) {\n                const nativeContext = this._nativeConvolverNode.context;\n\n                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, 44100);\n                this._isBufferNullified = true;\n\n                setAudioNodeTailTime(this, 0);\n            } else {\n                this._isBufferNullified = false;\n\n                setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);\n            }\n        }\n\n        get normalize(): boolean {\n            return this._nativeConvolverNode.normalize;\n        }\n\n        set normalize(value) {\n            this._nativeConvolverNode.normalize = value;\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}