{"ast":null,"code":"export var createNativeMediaStreamTrackAudioSourceNodeFactory = function createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, isNativeOfflineAudioContext) {\n  return function (nativeAudioContext, _ref) {\n    var mediaStreamTrack = _ref.mediaStreamTrack;\n\n    // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n    if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n      return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n    }\n\n    var mediaStream = new MediaStream([mediaStreamTrack]);\n    var nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream); // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n\n    if (mediaStreamTrack.kind !== 'audio') {\n      throw createInvalidStateError();\n    } // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n\n\n    if (isNativeOfflineAudioContext(nativeAudioContext)) {\n      throw new TypeError();\n    }\n\n    return nativeMediaStreamAudioSourceNode;\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,kDAAkD,GAAyD,SAA3GA,kDAA2G,CACpHC,uBADoH,EAEpHC,2BAFoH,EAGpH;EACA,OAAO,UAACC,kBAAD,QAA6C;IAAA,IAAtBC,gBAAsB,QAAtBA,gBAAsB;;IAChD;IACA,IAAI,OAAOD,kBAAkB,CAACE,4BAA1B,KAA2D,UAA/D,EAA2E;MACvE,OAAOF,kBAAkB,CAACE,4BAAnB,CAAgDD,gBAAhD,CAAP;IACH;;IAED,IAAME,WAAW,GAAG,IAAIC,WAAJ,CAAgB,CAACH,gBAAD,CAAhB,CAApB;IACA,IAAMI,gCAAgC,GAAGL,kBAAkB,CAACM,uBAAnB,CAA2CH,WAA3C,CAAzC,CAPgD,CAShD;;IACA,IAAIF,gBAAgB,CAACM,IAAjB,KAA0B,OAA9B,EAAuC;MACnC,MAAMT,uBAAuB,EAA7B;IACH,CAZ+C,CAchD;;;IACA,IAAIC,2BAA2B,CAACC,kBAAD,CAA/B,EAAqD;MACjD,MAAM,IAAIQ,SAAJ,EAAN;IACH;;IAED,OAAOH,gCAAP;EACH,CApBD;AAqBH,CAzBM","names":["createNativeMediaStreamTrackAudioSourceNodeFactory","createInvalidStateError","isNativeOfflineAudioContext","nativeAudioContext","mediaStreamTrack","createMediaStreamTrackSource","mediaStream","MediaStream","nativeMediaStreamAudioSourceNode","createMediaStreamSource","kind","TypeError"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\standardized-audio-context\\src\\factories\\native-media-stream-track-audio-source-node-factory.ts"],"sourcesContent":["import { TNativeMediaStreamTrackAudioSourceNodeFactoryFactory } from '../types';\n\nexport const createNativeMediaStreamTrackAudioSourceNodeFactory: TNativeMediaStreamTrackAudioSourceNodeFactoryFactory = (\n    createInvalidStateError,\n    isNativeOfflineAudioContext\n) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n        }\n\n        const mediaStream = new MediaStream([mediaStreamTrack]);\n        const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n\n        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n        if (mediaStreamTrack.kind !== 'audio') {\n            throw createInvalidStateError();\n        }\n\n        // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n        if (isNativeOfflineAudioContext(nativeAudioContext)) {\n            throw new TypeError();\n        }\n\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n"]},"metadata":{},"sourceType":"module"}