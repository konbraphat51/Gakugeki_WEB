{"ast":null,"code":"import _classCallCheck from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nexport var createEventTargetConstructor = function createEventTargetConstructor(wrapEventListener) {\n  return /*#__PURE__*/function () {\n    function EventTarget(_nativeEventTarget) {\n      _classCallCheck(this, EventTarget);\n\n      this._nativeEventTarget = _nativeEventTarget;\n      this._listeners = new WeakMap();\n    }\n\n    _createClass(EventTarget, [{\n      key: \"addEventListener\",\n      value: function addEventListener(type, listener, options) {\n        if (listener !== null) {\n          var wrappedEventListener = this._listeners.get(listener);\n\n          if (wrappedEventListener === undefined) {\n            wrappedEventListener = wrapEventListener(this, listener);\n\n            if (typeof listener === 'function') {\n              this._listeners.set(listener, wrappedEventListener);\n            }\n          }\n\n          this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n        }\n      }\n    }, {\n      key: \"dispatchEvent\",\n      value: function dispatchEvent(event) {\n        return this._nativeEventTarget.dispatchEvent(event);\n      }\n    }, {\n      key: \"removeEventListener\",\n      value: function removeEventListener(type, listener, options) {\n        var wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n\n        this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n      }\n    }]);\n\n    return EventTarget;\n  }();\n};","map":{"version":3,"mappings":";;AAGA,OAAO,IAAMA,4BAA4B,GAAmC,SAA/DA,4BAA+D,CAACC,iBAAD,EAAsB;EAC9F;IAGI,qBAAoBC,kBAApB,EAA0D;MAAA;;MAAtC;MAChB,KAAKC,UAAL,GAAkB,IAAIC,OAAJ,EAAlB;IACH;;IALL;MAAA;MAAA,OAOW,0BACHC,IADG,EAEHC,QAFG,EAGHC,OAHG,EAGwC;QAE3C,IAAID,QAAQ,KAAK,IAAjB,EAAuB;UACnB,IAAIE,oBAAoB,GAAG,KAAKL,UAAL,CAAgBM,GAAhB,CAAoBH,QAApB,CAA3B;;UAEA,IAAIE,oBAAoB,KAAKE,SAA7B,EAAwC;YACpCF,oBAAoB,GAAGP,iBAAiB,CAAC,IAAD,EAAOK,QAAP,CAAxC;;YAEA,IAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;cAChC,KAAKH,UAAL,CAAgBQ,GAAhB,CAAoBL,QAApB,EAA8BE,oBAA9B;YACH;UACJ;;UAED,KAAKN,kBAAL,CAAwBU,gBAAxB,CAAyCP,IAAzC,EAA+CG,oBAA/C,EAAqED,OAArE;QACH;MACJ;IAzBL;MAAA;MAAA,OA2BW,uBAAcM,KAAd,EAA0B;QAC7B,OAAO,KAAKX,kBAAL,CAAwBY,aAAxB,CAAsCD,KAAtC,CAAP;MACH;IA7BL;MAAA;MAAA,OA+BW,6BACHR,IADG,EAEHC,QAFG,EAGHC,OAHG,EAGqC;QAExC,IAAMC,oBAAoB,GAAGF,QAAQ,KAAK,IAAb,GAAoBI,SAApB,GAAgC,KAAKP,UAAL,CAAgBM,GAAhB,CAAoBH,QAApB,CAA7D;;QAEA,KAAKJ,kBAAL,CAAwBa,mBAAxB,CAA4CV,IAA5C,EAAkDG,oBAAoB,KAAKE,SAAzB,GAAqC,IAArC,GAA4CF,oBAA9F,EAAoHD,OAApH;MACH;IAvCL;;IAAA;EAAA;AAyCH,CA1CM","names":["createEventTargetConstructor","wrapEventListener","_nativeEventTarget","_listeners","WeakMap","type","listener","options","wrappedEventListener","get","undefined","set","addEventListener","event","dispatchEvent","removeEventListener"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\standardized-audio-context\\src\\factories\\event-target-constructor.ts"],"sourcesContent":["import { IEventTarget } from '../interfaces';\nimport { TEventHandler, TEventTargetConstructorFactory, TNativeEventTarget } from '../types';\n\nexport const createEventTargetConstructor: TEventTargetConstructorFactory = (wrapEventListener) => {\n    return class EventTarget<EventMap extends Record<string, Event>> implements IEventTarget<EventMap> {\n        private _listeners: WeakMap<EventListenerOrEventListenerObject, EventListenerOrEventListenerObject>;\n\n        constructor(private _nativeEventTarget: TNativeEventTarget) {\n            this._listeners = new WeakMap();\n        }\n\n        public addEventListener(\n            type: string,\n            listener: null | TEventHandler<this> | EventListenerOrEventListenerObject,\n            options?: boolean | AddEventListenerOptions\n        ): void {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n\n        public dispatchEvent(event: Event): boolean {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n\n        public removeEventListener(\n            type: string,\n            listener: null | TEventHandler<this> | EventListenerOrEventListenerObject,\n            options?: boolean | EventListenerOptions\n        ): void {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}