{"ast":null,"code":"export var createMediaQueryMatch = function createMediaQueryMatch(emitNotSupportedError, window, wrapSubscribeFunction) {\n  return function (mediaQueryString) {\n    return wrapSubscribeFunction(function (observer) {\n      if (window === null || window.matchMedia === undefined) {\n        return emitNotSupportedError(observer);\n      }\n\n      var mediaQueryList = window.matchMedia(mediaQueryString);\n      observer.next(mediaQueryList.matches);\n\n      mediaQueryList.onchange = function () {\n        return observer.next(mediaQueryList.matches);\n      };\n\n      return function () {\n        mediaQueryList.onchange = null;\n      };\n    });\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,qBAAqB,GAA4B,SAAjDA,qBAAiD,CAACC,qBAAD,EAAwBC,MAAxB,EAAgCC,qBAAhC,EAAyD;EACnH,OAAO,UAACC,gBAAD;IAAA,OACHD,qBAAqB,CAAC,UAACE,QAAD,EAAa;MAC/B,IAAIH,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACI,UAAP,KAAsBC,SAA7C,EAAwD;QACpD,OAAON,qBAAqB,CAACI,QAAD,CAA5B;MACH;;MAED,IAAMG,cAAc,GAAGN,MAAM,CAACI,UAAP,CAAkBF,gBAAlB,CAAvB;MAEAC,QAAQ,CAACI,IAAT,CAAcD,cAAc,CAACE,OAA7B;;MAEAF,cAAc,CAACG,QAAf,GAA0B;QAAA,OAAMN,QAAQ,CAACI,IAAT,CAAcD,cAAc,CAACE,OAA7B,CAAN;MAAA,CAA1B;;MAEA,OAAO,YAAK;QACRF,cAAc,CAACG,QAAf,GAA0B,IAA1B;MACH,CAFD;IAGH,CAdoB,CADlB;EAAA,CAAP;AAgBH,CAjBM","names":["createMediaQueryMatch","emitNotSupportedError","window","wrapSubscribeFunction","mediaQueryString","observer","matchMedia","undefined","mediaQueryList","next","matches","onchange"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\subscribable-things\\src\\factories\\media-query-match.ts"],"sourcesContent":["import { TMediaQueryMatchFactory } from '../types';\n\nexport const createMediaQueryMatch: TMediaQueryMatchFactory = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (mediaQueryString) =>\n        wrapSubscribeFunction((observer) => {\n            if (window === null || window.matchMedia === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            const mediaQueryList = window.matchMedia(mediaQueryString);\n\n            observer.next(mediaQueryList.matches);\n\n            mediaQueryList.onchange = () => observer.next(mediaQueryList.matches);\n\n            return () => {\n                mediaQueryList.onchange = null;\n            };\n        });\n};\n"]},"metadata":{},"sourceType":"module"}