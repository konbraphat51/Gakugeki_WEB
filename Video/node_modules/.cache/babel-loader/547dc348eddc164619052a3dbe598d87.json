{"ast":null,"code":"export var createDeleteActiveInputConnectionToAudioNode = function createDeleteActiveInputConnectionToAudioNode(pickElementFromSet) {\n  return function (activeInputs, source, output, input) {\n    return pickElementFromSet(activeInputs[input], function (activeInputConnection) {\n      return activeInputConnection[0] === source && activeInputConnection[1] === output;\n    });\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,IAAMA,4CAA4C,GAAmD,SAA/FA,4CAA+F,CAACC,kBAAD,EAAuB;EAC/H,OAAO,UAACC,YAAD,EAAeC,MAAf,EAAuBC,MAAvB,EAA+BC,KAA/B,EAAwC;IAC3C,OAAOJ,kBAAkB,CACrBC,YAAY,CAACG,KAAD,CADS,EAErB,UAACC,qBAAD;MAAA,OAA2BA,qBAAqB,CAAC,CAAD,CAArB,KAA6BH,MAA7B,IAAuCG,qBAAqB,CAAC,CAAD,CAArB,KAA6BF,MAA/F;IAAA,CAFqB,CAAzB;EAIH,CALD;AAMH,CAPM","names":["createDeleteActiveInputConnectionToAudioNode","pickElementFromSet","activeInputs","source","output","input","activeInputConnection"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\standardized-audio-context\\src\\factories\\delete-active-input-connection-to-audio-node.ts"],"sourcesContent":["import { TDeleteActiveInputConnectionToAudioNodeFactory } from '../types';\n\nexport const createDeleteActiveInputConnectionToAudioNode: TDeleteActiveInputConnectionToAudioNodeFactory = (pickElementFromSet) => {\n    return (activeInputs, source, output, input) => {\n        return pickElementFromSet(\n            activeInputs[input],\n            (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output\n        );\n    };\n};\n"]},"metadata":{},"sourceType":"module"}