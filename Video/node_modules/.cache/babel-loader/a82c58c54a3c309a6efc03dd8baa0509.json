{"ast":null,"code":"import _objectSpread from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nexport var sanitizePeriodicWaveOptions = function sanitizePeriodicWaveOptions(options) {\n  var imag = options.imag,\n      real = options.real;\n\n  if (imag === undefined) {\n    if (real === undefined) {\n      return _objectSpread(_objectSpread({}, options), {}, {\n        imag: [0, 0],\n        real: [0, 0]\n      });\n    }\n\n    return _objectSpread(_objectSpread({}, options), {}, {\n      imag: Array.from(real, function () {\n        return 0;\n      }),\n      real: real\n    });\n  }\n\n  if (real === undefined) {\n    return _objectSpread(_objectSpread({}, options), {}, {\n      imag: imag,\n      real: Array.from(imag, function () {\n        return 0;\n      })\n    });\n  }\n\n  return _objectSpread(_objectSpread({}, options), {}, {\n    imag: imag,\n    real: real\n  });\n};","map":{"version":3,"mappings":";AAEA,OAAO,IAAMA,2BAA2B,GAAyC,SAApEA,2BAAoE,CAACC,OAAD,EAAY;EACzF,IAAQC,IAAR,GAAuBD,OAAvB,CAAQC,IAAR;EAAA,IAAcC,IAAd,GAAuBF,OAAvB,CAAcE,IAAd;;EAEA,IAAID,IAAI,KAAKE,SAAb,EAAwB;IACpB,IAAID,IAAI,KAAKC,SAAb,EAAwB;MACpB,uCAAYH,OAAZ;QAAqBC,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,CAA3B;QAAmCC,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ;MAAzC;IACH;;IAED,uCAAYF,OAAZ;MAAqBC,IAAI,EAAEG,KAAK,CAACC,IAAN,CAAWH,IAAX,EAAiB;QAAA,OAAM,CAAN;MAAA,CAAjB,CAA3B;MAAsDA,IAAI,EAAJA;IAAtD;EACH;;EAED,IAAIA,IAAI,KAAKC,SAAb,EAAwB;IACpB,uCAAYH,OAAZ;MAAqBC,IAAI,EAAJA,IAArB;MAA2BC,IAAI,EAAEE,KAAK,CAACC,IAAN,CAAWJ,IAAX,EAAiB;QAAA,OAAM,CAAN;MAAA,CAAjB;IAAjC;EACH;;EAED,uCAAYD,OAAZ;IAAqBC,IAAI,EAAJA,IAArB;IAA2BC,IAAI,EAAJA;EAA3B;AACH,CAhBM","names":["sanitizePeriodicWaveOptions","options","imag","real","undefined","Array","from"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\standardized-audio-context\\src\\helpers\\sanitize-periodic-wave-options.ts"],"sourcesContent":["import { TSanitizePeriodicWaveOptionsFunction } from '../types';\n\nexport const sanitizePeriodicWaveOptions: TSanitizePeriodicWaveOptionsFunction = (options) => {\n    const { imag, real } = options;\n\n    if (imag === undefined) {\n        if (real === undefined) {\n            return { ...options, imag: [0, 0], real: [0, 0] };\n        }\n\n        return { ...options, imag: Array.from(real, () => 0), real };\n    }\n\n    if (real === undefined) {\n        return { ...options, imag, real: Array.from(imag, () => 0) };\n    }\n\n    return { ...options, imag, real };\n};\n"]},"metadata":{},"sourceType":"module"}