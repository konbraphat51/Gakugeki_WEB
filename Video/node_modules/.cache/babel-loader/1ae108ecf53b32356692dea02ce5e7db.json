{"ast":null,"code":"import _objectSpread from \"C:/Users/brigh/storage/js_project/Gakugeki_WEB/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nexport var createVideoFrame = function createVideoFrame(emitNotSupportedError, wrapSubscribeFunction) {\n  return function (videoElement) {\n    return wrapSubscribeFunction(function (observer) {\n      if (videoElement.cancelVideoFrameCallback === undefined || videoElement.requestVideoFrameCallback === undefined) {\n        return emitNotSupportedError(observer);\n      }\n\n      var videoFrameHandle = videoElement.requestVideoFrameCallback(function videoFrameCallback(now, metadata) {\n        videoFrameHandle = videoElement.requestVideoFrameCallback(videoFrameCallback);\n        observer.next(_objectSpread(_objectSpread({}, metadata), {}, {\n          now: now\n        }));\n      });\n      return function () {\n        return videoElement.cancelVideoFrameCallback(videoFrameHandle);\n      };\n    });\n  };\n};","map":{"version":3,"mappings":";AAEA,OAAO,IAAMA,gBAAgB,GAAuB,SAAvCA,gBAAuC,CAACC,qBAAD,EAAwBC,qBAAxB,EAAiD;EACjG,OAAO,UAACC,YAAD;IAAA,OACHD,qBAAqB,CAAC,UAACE,QAAD,EAAa;MAC/B,IAAID,YAAY,CAACE,wBAAb,KAA0CC,SAA1C,IAAuDH,YAAY,CAACI,yBAAb,KAA2CD,SAAtG,EAAiH;QAC7G,OAAOL,qBAAqB,CAACG,QAAD,CAA5B;MACH;;MAED,IAAII,gBAAgB,GAAGL,YAAY,CAACI,yBAAb,CAAuC,SAASE,kBAAT,CAA4BC,GAA5B,EAAiCC,QAAjC,EAAyC;QACnGH,gBAAgB,GAAGL,YAAY,CAACI,yBAAb,CAAuCE,kBAAvC,CAAnB;QAEAL,QAAQ,CAACQ,IAAT,iCAAmBD,QAAnB;UAA6BD,GAAG,EAAHA;QAA7B;MACH,CAJsB,CAAvB;MAMA,OAAO;QAAA,OAAMP,YAAY,CAACE,wBAAb,CAAsCG,gBAAtC,CAAN;MAAA,CAAP;IACH,CAZoB,CADlB;EAAA,CAAP;AAcH,CAfM","names":["createVideoFrame","emitNotSupportedError","wrapSubscribeFunction","videoElement","observer","cancelVideoFrameCallback","undefined","requestVideoFrameCallback","videoFrameHandle","videoFrameCallback","now","metadata","next"],"sources":["C:\\Users\\brigh\\storage\\js_project\\Gakugeki_WEB\\node_modules\\subscribable-things\\src\\factories\\video-frame.ts"],"sourcesContent":["import { TVideoFrameFactory } from '../types';\n\nexport const createVideoFrame: TVideoFrameFactory = (emitNotSupportedError, wrapSubscribeFunction) => {\n    return (videoElement) =>\n        wrapSubscribeFunction((observer) => {\n            if (videoElement.cancelVideoFrameCallback === undefined || videoElement.requestVideoFrameCallback === undefined) {\n                return emitNotSupportedError(observer);\n            }\n\n            let videoFrameHandle = videoElement.requestVideoFrameCallback(function videoFrameCallback(now, metadata): void {\n                videoFrameHandle = videoElement.requestVideoFrameCallback(videoFrameCallback);\n\n                observer.next({ ...metadata, now });\n            });\n\n            return () => videoElement.cancelVideoFrameCallback(videoFrameHandle);\n        });\n};\n"]},"metadata":{},"sourceType":"module"}